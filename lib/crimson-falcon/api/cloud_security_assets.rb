=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

MIT License

Copyright (c) 2023 Crowdstrike

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=end

require 'cgi'

module Falcon
  class CloudSecurityAssets
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Gets combined compliance data aggregated by account and region. Results can be filtered and sorted.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :filter FQL string to filter on asset contents. Filterable fields include: - &#x60;account_id&#x60; - &#x60;account_name&#x60; - &#x60;assessment_id&#x60; - &#x60;business_impact&#x60; - &#x60;cloud_group&#x60; - &#x60;cloud_label&#x60; - &#x60;cloud_label_id&#x60; - &#x60;cloud_provider&#x60; - &#x60;cloud_scope&#x60; - &#x60;compliant&#x60; - &#x60;control.benchmark.name&#x60; - &#x60;control.benchmark.version&#x60; - &#x60;control.framework&#x60; - &#x60;control.name&#x60; - &#x60;control.type&#x60; - &#x60;control.version&#x60; - &#x60;environment&#x60; - &#x60;last_evaluated&#x60; - &#x60;region&#x60; - &#x60;resource_provider&#x60; - &#x60;resource_type&#x60; - &#x60;resource_type_name&#x60; - &#x60;service&#x60; - &#x60;service_category&#x60; - &#x60;severities&#x60;
    # @option opts [String] :sort Sort expression in format: field|direction (e.g., last_evaluated|desc). Allowed sort fields:  - &#x60;account_id&#x60; - &#x60;account_name&#x60; - &#x60;assessment_id&#x60; - &#x60;cloud_provider&#x60; - &#x60;control.benchmark.name&#x60; - &#x60;control.benchmark.version&#x60; - &#x60;control.framework&#x60; - &#x60;control.name&#x60; - &#x60;control.type&#x60; - &#x60;control.version&#x60; - &#x60;last_evaluated&#x60; - &#x60;region&#x60; - &#x60;resource_counts.compliant&#x60; - &#x60;resource_counts.non_compliant&#x60; - &#x60;resource_counts.total&#x60; - &#x60;resource_provider&#x60; - &#x60;resource_type&#x60; - &#x60;resource_type_name&#x60; - &#x60;service&#x60; - &#x60;service_category&#x60;
    # @option opts [Integer] :limit The maximum number of items to return. When not specified or 0, 20 is used. When larger than 10000, 10000 is used. (default to 20)
    # @option opts [Integer] :offset Offset returned controls. Use only one of &#39;offset&#39; and &#39;after&#39; parameter for paginating. &#39;offset&#39; can only be used on offsets &lt; 10,000. For paginating through the entire result set, use &#39;after&#39; parameter
    # @option opts [String] :after token-based pagination. use for paginating through an entire result set. Use only one of &#39;offset&#39; and &#39;after&#39; parameters for paginating
    # @option opts [Boolean] :include_failing_iom_severity_counts Include counts of failing IOMs by severity level (default to false)
    # @return [AssetsComplianceResponse]
    def cloud_security_assets_combined_compliance_by_account(opts = {})
      data, _status_code, _headers = cloud_security_assets_combined_compliance_by_account_with_http_info(opts)
      data
    end

    # Gets combined compliance data aggregated by account and region. Results can be filtered and sorted.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :filter FQL string to filter on asset contents. Filterable fields include: - &#x60;account_id&#x60; - &#x60;account_name&#x60; - &#x60;assessment_id&#x60; - &#x60;business_impact&#x60; - &#x60;cloud_group&#x60; - &#x60;cloud_label&#x60; - &#x60;cloud_label_id&#x60; - &#x60;cloud_provider&#x60; - &#x60;cloud_scope&#x60; - &#x60;compliant&#x60; - &#x60;control.benchmark.name&#x60; - &#x60;control.benchmark.version&#x60; - &#x60;control.framework&#x60; - &#x60;control.name&#x60; - &#x60;control.type&#x60; - &#x60;control.version&#x60; - &#x60;environment&#x60; - &#x60;last_evaluated&#x60; - &#x60;region&#x60; - &#x60;resource_provider&#x60; - &#x60;resource_type&#x60; - &#x60;resource_type_name&#x60; - &#x60;service&#x60; - &#x60;service_category&#x60; - &#x60;severities&#x60;
    # @option opts [String] :sort Sort expression in format: field|direction (e.g., last_evaluated|desc). Allowed sort fields:  - &#x60;account_id&#x60; - &#x60;account_name&#x60; - &#x60;assessment_id&#x60; - &#x60;cloud_provider&#x60; - &#x60;control.benchmark.name&#x60; - &#x60;control.benchmark.version&#x60; - &#x60;control.framework&#x60; - &#x60;control.name&#x60; - &#x60;control.type&#x60; - &#x60;control.version&#x60; - &#x60;last_evaluated&#x60; - &#x60;region&#x60; - &#x60;resource_counts.compliant&#x60; - &#x60;resource_counts.non_compliant&#x60; - &#x60;resource_counts.total&#x60; - &#x60;resource_provider&#x60; - &#x60;resource_type&#x60; - &#x60;resource_type_name&#x60; - &#x60;service&#x60; - &#x60;service_category&#x60;
    # @option opts [Integer] :limit The maximum number of items to return. When not specified or 0, 20 is used. When larger than 10000, 10000 is used. (default to 20)
    # @option opts [Integer] :offset Offset returned controls. Use only one of &#39;offset&#39; and &#39;after&#39; parameter for paginating. &#39;offset&#39; can only be used on offsets &lt; 10,000. For paginating through the entire result set, use &#39;after&#39; parameter
    # @option opts [String] :after token-based pagination. use for paginating through an entire result set. Use only one of &#39;offset&#39; and &#39;after&#39; parameters for paginating
    # @option opts [Boolean] :include_failing_iom_severity_counts Include counts of failing IOMs by severity level (default to false)
    # @return [Array<(AssetsComplianceResponse, Integer, Hash)>] AssetsComplianceResponse data, response status code and response headers
    def cloud_security_assets_combined_compliance_by_account_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CloudSecurityAssets.cloud_security_assets_combined_compliance_by_account ...'
      end
      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 10000
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CloudSecurityAssets.cloud_security_assets_combined_compliance_by_account, must be smaller than or equal to 10000.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 0
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CloudSecurityAssets.cloud_security_assets_combined_compliance_by_account, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'offset'].nil? && opts[:'offset'] > 9999
        fail ArgumentError, 'invalid value for "opts[:"offset"]" when calling CloudSecurityAssets.cloud_security_assets_combined_compliance_by_account, must be smaller than or equal to 9999.'
      end

      if @api_client.config.client_side_validation && !opts[:'offset'].nil? && opts[:'offset'] < 0
        fail ArgumentError, 'invalid value for "opts[:"offset"]" when calling CloudSecurityAssets.cloud_security_assets_combined_compliance_by_account, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'filter'] = opts[:'filter'] if !opts[:'filter'].nil?
      query_params[:'sort'] = opts[:'sort'] if !opts[:'sort'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'after'] = opts[:'after'] if !opts[:'after'].nil?
      query_params[:'include_failing_iom_severity_counts'] = opts[:'include_failing_iom_severity_counts'] if !opts[:'include_failing_iom_severity_counts'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'AssetsComplianceResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['oauth2']

      new_options = opts.merge(
        :operation => :"CloudSecurityAssets.cloud_security_assets_combined_compliance_by_account",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CloudSecurityAssets#cloud_security_assets_combined_compliance_by_account\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Gets raw resources based on the provided IDs param.  Maximum of 100 resources can be requested with this method.  Use POST method with same path if more are required.
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :ids List of assets to return (maximum 100 IDs allowed).  Use POST method with same path if more entities are required.
    # @return [AssetsGetResourcesResponse]
    def cloud_security_assets_entities_get(opts = {})
      data, _status_code, _headers = cloud_security_assets_entities_get_with_http_info(opts)
      data
    end

    # Gets raw resources based on the provided IDs param.  Maximum of 100 resources can be requested with this method.  Use POST method with same path if more are required.
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :ids List of assets to return (maximum 100 IDs allowed).  Use POST method with same path if more entities are required.
    # @return [Array<(AssetsGetResourcesResponse, Integer, Hash)>] AssetsGetResourcesResponse data, response status code and response headers
    def cloud_security_assets_entities_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CloudSecurityAssets.cloud_security_assets_entities_get ...'
      end
      # resource path
      local_var_path = '/cloud-security-assets/entities/resources/v1'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'ids'] = @api_client.build_collection_param(opts[:'ids'], :multi) if !opts[:'ids'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'AssetsGetResourcesResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['oauth2']

      new_options = opts.merge(
        :operation => :"CloudSecurityAssets.cloud_security_assets_entities_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CloudSecurityAssets#cloud_security_assets_entities_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Gets a list of resource IDs for the given parameters, filters and sort criteria
    # @param [Hash] opts the optional parameters
    # @option opts [String] :after token-based pagination. use for paginating through an entire result set. Use only one of &#39;offset&#39; and &#39;after&#39; parameters for paginating
    # @option opts [String] :filter FQL string to filter on asset contents. Filterable fields include: - &#x60;account_id&#x60; - &#x60;account_name&#x60; - &#x60;active&#x60; - &#x60;application_security.business_applications&#x60; - &#x60;application_security.business_criticality&#x60; - &#x60;application_security.service_names&#x60; - &#x60;azure.vm_id&#x60; - &#x60;business_impact&#x60; - &#x60;cloud_group&#x60; - &#x60;cloud_label&#x60; - &#x60;cloud_label_id&#x60; - &#x60;cloud_provider&#x60; - &#x60;cloud_scope&#x60; - &#x60;cluster_id&#x60; - &#x60;cluster_name&#x60; - &#x60;compartment_ocid&#x60; - &#x60;compliant.benchmark_name&#x60; - &#x60;compliant.benchmark_version&#x60; - &#x60;compliant.framework&#x60; - &#x60;compliant.policy_id&#x60; - &#x60;compliant.requirement&#x60; - &#x60;compliant.rule&#x60; - &#x60;compliant.section&#x60; - &#x60;configuration.id&#x60; - &#x60;creation_time&#x60; - &#x60;cve_ids&#x60; - &#x60;data_classifications.found&#x60; - &#x60;data_classifications.label&#x60; - &#x60;data_classifications.label_id&#x60; - &#x60;data_classifications.scanned&#x60; - &#x60;data_classifications.tag&#x60; - &#x60;data_classifications.tag_id&#x60; - &#x60;environment&#x60; - &#x60;exprt_ratings&#x60; - &#x60;first_seen&#x60; - &#x60;highest_severity&#x60; - &#x60;id&#x60; - &#x60;insights.boolean_value&#x60; - &#x60;insights.id&#x60; - &#x60;instance_id&#x60; - &#x60;instance_state&#x60; - &#x60;ioa_count&#x60; - &#x60;iom_count&#x60; - &#x60;legacy_resource_id&#x60; - &#x60;legacy_uuid&#x60; - &#x60;managed_by&#x60; - &#x60;non_compliant.benchmark_name&#x60; - &#x60;non_compliant.benchmark_version&#x60; - &#x60;non_compliant.framework&#x60; - &#x60;non_compliant.policy_id&#x60; - &#x60;non_compliant.requirement&#x60; - &#x60;non_compliant.rule&#x60; - &#x60;non_compliant.section&#x60; - &#x60;non_compliant.severity&#x60; - &#x60;organization_Id&#x60; - &#x60;os_version&#x60; - &#x60;platform_name&#x60; - &#x60;publicly_exposed&#x60; - &#x60;region&#x60; - &#x60;resource_id&#x60; - &#x60;resource_name&#x60; - &#x60;resource_type&#x60; - &#x60;resource_type_name&#x60; - &#x60;sensor_priority&#x60; - &#x60;service&#x60; - &#x60;service_category&#x60; - &#x60;severity&#x60; - &#x60;snapshot_detections&#x60; - &#x60;ssm_managed&#x60; - &#x60;status&#x60; - &#x60;tag_key&#x60; - &#x60;tag_value&#x60; - &#x60;tags&#x60; - &#x60;tenant_id&#x60; - &#x60;updated_at&#x60; - &#x60;vmware.guest_os_id&#x60; - &#x60;vmware.guest_os_version&#x60; - &#x60;vmware.host_system_name&#x60; - &#x60;vmware.host_type&#x60; - &#x60;vmware.instance_uuid&#x60; - &#x60;vmware.vm_host_name&#x60; - &#x60;vmware.vm_tools_status&#x60; - &#x60;zone&#x60;
    # @option opts [String] :sort The field to sort on.  Sortable fields include: - &#x60;account_id&#x60; - &#x60;account_name&#x60; - &#x60;active&#x60; - &#x60;cloud_provider&#x60; - &#x60;cluster_id&#x60; - &#x60;cluster_name&#x60; - &#x60;compartment_name&#x60; - &#x60;compartment_ocid&#x60; - &#x60;compartment_path&#x60; - &#x60;creation_time&#x60; - &#x60;data_classifications.found&#x60; - &#x60;data_classifications.scanned&#x60; - &#x60;first_seen&#x60; - &#x60;id&#x60; - &#x60;instance_id&#x60; - &#x60;instance_state&#x60; - &#x60;ioa_count&#x60; - &#x60;iom_count&#x60; - &#x60;managed_by&#x60; - &#x60;organization_Id&#x60; - &#x60;os_version&#x60; - &#x60;platform_name&#x60; - &#x60;publicly_exposed&#x60; - &#x60;region&#x60; - &#x60;resource_id&#x60; - &#x60;resource_name&#x60; - &#x60;resource_type&#x60; - &#x60;resource_type_name&#x60; - &#x60;service&#x60; - &#x60;service_category&#x60; - &#x60;ssm_managed&#x60; - &#x60;status&#x60; - &#x60;tenancy_name&#x60; - &#x60;tenancy_ocid&#x60; - &#x60;tenancy_type&#x60; - &#x60;tenant_id&#x60; - &#x60;updated_at&#x60; - &#x60;vmware.guest_os_id&#x60; - &#x60;vmware.guest_os_version&#x60; - &#x60;vmware.host_system_name&#x60; - &#x60;vmware.host_type&#x60; - &#x60;vmware.instance_uuid&#x60; - &#x60;vmware.vm_host_name&#x60; - &#x60;vmware.vm_tools_status&#x60; - &#x60;zone&#x60;  Use &#x60;|asc&#x60; or &#x60;|desc&#x60; suffix to specify sort direction.
    # @option opts [Integer] :limit The maximum number of items to return. When not specified or 0, 500 is used. When larger than 1000, 1000 is used. (default to 500)
    # @option opts [Integer] :offset Offset returned assets. Use only one of &#39;offset&#39; and &#39;after&#39; parameter for paginating. &#39;offset&#39; can only be used on offsets &lt; 10,000. For paginating through the entire result set, use &#39;after&#39; parameter
    # @return [AssetsGetResourceIDsResponse]
    def cloud_security_assets_queries(opts = {})
      data, _status_code, _headers = cloud_security_assets_queries_with_http_info(opts)
      data
    end

    # Gets a list of resource IDs for the given parameters, filters and sort criteria
    # @param [Hash] opts the optional parameters
    # @option opts [String] :after token-based pagination. use for paginating through an entire result set. Use only one of &#39;offset&#39; and &#39;after&#39; parameters for paginating
    # @option opts [String] :filter FQL string to filter on asset contents. Filterable fields include: - &#x60;account_id&#x60; - &#x60;account_name&#x60; - &#x60;active&#x60; - &#x60;application_security.business_applications&#x60; - &#x60;application_security.business_criticality&#x60; - &#x60;application_security.service_names&#x60; - &#x60;azure.vm_id&#x60; - &#x60;business_impact&#x60; - &#x60;cloud_group&#x60; - &#x60;cloud_label&#x60; - &#x60;cloud_label_id&#x60; - &#x60;cloud_provider&#x60; - &#x60;cloud_scope&#x60; - &#x60;cluster_id&#x60; - &#x60;cluster_name&#x60; - &#x60;compartment_ocid&#x60; - &#x60;compliant.benchmark_name&#x60; - &#x60;compliant.benchmark_version&#x60; - &#x60;compliant.framework&#x60; - &#x60;compliant.policy_id&#x60; - &#x60;compliant.requirement&#x60; - &#x60;compliant.rule&#x60; - &#x60;compliant.section&#x60; - &#x60;configuration.id&#x60; - &#x60;creation_time&#x60; - &#x60;cve_ids&#x60; - &#x60;data_classifications.found&#x60; - &#x60;data_classifications.label&#x60; - &#x60;data_classifications.label_id&#x60; - &#x60;data_classifications.scanned&#x60; - &#x60;data_classifications.tag&#x60; - &#x60;data_classifications.tag_id&#x60; - &#x60;environment&#x60; - &#x60;exprt_ratings&#x60; - &#x60;first_seen&#x60; - &#x60;highest_severity&#x60; - &#x60;id&#x60; - &#x60;insights.boolean_value&#x60; - &#x60;insights.id&#x60; - &#x60;instance_id&#x60; - &#x60;instance_state&#x60; - &#x60;ioa_count&#x60; - &#x60;iom_count&#x60; - &#x60;legacy_resource_id&#x60; - &#x60;legacy_uuid&#x60; - &#x60;managed_by&#x60; - &#x60;non_compliant.benchmark_name&#x60; - &#x60;non_compliant.benchmark_version&#x60; - &#x60;non_compliant.framework&#x60; - &#x60;non_compliant.policy_id&#x60; - &#x60;non_compliant.requirement&#x60; - &#x60;non_compliant.rule&#x60; - &#x60;non_compliant.section&#x60; - &#x60;non_compliant.severity&#x60; - &#x60;organization_Id&#x60; - &#x60;os_version&#x60; - &#x60;platform_name&#x60; - &#x60;publicly_exposed&#x60; - &#x60;region&#x60; - &#x60;resource_id&#x60; - &#x60;resource_name&#x60; - &#x60;resource_type&#x60; - &#x60;resource_type_name&#x60; - &#x60;sensor_priority&#x60; - &#x60;service&#x60; - &#x60;service_category&#x60; - &#x60;severity&#x60; - &#x60;snapshot_detections&#x60; - &#x60;ssm_managed&#x60; - &#x60;status&#x60; - &#x60;tag_key&#x60; - &#x60;tag_value&#x60; - &#x60;tags&#x60; - &#x60;tenant_id&#x60; - &#x60;updated_at&#x60; - &#x60;vmware.guest_os_id&#x60; - &#x60;vmware.guest_os_version&#x60; - &#x60;vmware.host_system_name&#x60; - &#x60;vmware.host_type&#x60; - &#x60;vmware.instance_uuid&#x60; - &#x60;vmware.vm_host_name&#x60; - &#x60;vmware.vm_tools_status&#x60; - &#x60;zone&#x60;
    # @option opts [String] :sort The field to sort on.  Sortable fields include: - &#x60;account_id&#x60; - &#x60;account_name&#x60; - &#x60;active&#x60; - &#x60;cloud_provider&#x60; - &#x60;cluster_id&#x60; - &#x60;cluster_name&#x60; - &#x60;compartment_name&#x60; - &#x60;compartment_ocid&#x60; - &#x60;compartment_path&#x60; - &#x60;creation_time&#x60; - &#x60;data_classifications.found&#x60; - &#x60;data_classifications.scanned&#x60; - &#x60;first_seen&#x60; - &#x60;id&#x60; - &#x60;instance_id&#x60; - &#x60;instance_state&#x60; - &#x60;ioa_count&#x60; - &#x60;iom_count&#x60; - &#x60;managed_by&#x60; - &#x60;organization_Id&#x60; - &#x60;os_version&#x60; - &#x60;platform_name&#x60; - &#x60;publicly_exposed&#x60; - &#x60;region&#x60; - &#x60;resource_id&#x60; - &#x60;resource_name&#x60; - &#x60;resource_type&#x60; - &#x60;resource_type_name&#x60; - &#x60;service&#x60; - &#x60;service_category&#x60; - &#x60;ssm_managed&#x60; - &#x60;status&#x60; - &#x60;tenancy_name&#x60; - &#x60;tenancy_ocid&#x60; - &#x60;tenancy_type&#x60; - &#x60;tenant_id&#x60; - &#x60;updated_at&#x60; - &#x60;vmware.guest_os_id&#x60; - &#x60;vmware.guest_os_version&#x60; - &#x60;vmware.host_system_name&#x60; - &#x60;vmware.host_type&#x60; - &#x60;vmware.instance_uuid&#x60; - &#x60;vmware.vm_host_name&#x60; - &#x60;vmware.vm_tools_status&#x60; - &#x60;zone&#x60;  Use &#x60;|asc&#x60; or &#x60;|desc&#x60; suffix to specify sort direction.
    # @option opts [Integer] :limit The maximum number of items to return. When not specified or 0, 500 is used. When larger than 1000, 1000 is used. (default to 500)
    # @option opts [Integer] :offset Offset returned assets. Use only one of &#39;offset&#39; and &#39;after&#39; parameter for paginating. &#39;offset&#39; can only be used on offsets &lt; 10,000. For paginating through the entire result set, use &#39;after&#39; parameter
    # @return [Array<(AssetsGetResourceIDsResponse, Integer, Hash)>] AssetsGetResourceIDsResponse data, response status code and response headers
    def cloud_security_assets_queries_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CloudSecurityAssets.cloud_security_assets_queries ...'
      end
      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CloudSecurityAssets.cloud_security_assets_queries, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 0
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CloudSecurityAssets.cloud_security_assets_queries, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'offset'].nil? && opts[:'offset'] < 0
        fail ArgumentError, 'invalid value for "opts[:"offset"]" when calling CloudSecurityAssets.cloud_security_assets_queries, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/cloud-security-assets/queries/resources/v1'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'after'] = opts[:'after'] if !opts[:'after'].nil?
      query_params[:'filter'] = opts[:'filter'] if !opts[:'filter'].nil?
      query_params[:'sort'] = opts[:'sort'] if !opts[:'sort'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'AssetsGetResourceIDsResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['oauth2']

      new_options = opts.merge(
        :operation => :"CloudSecurityAssets.cloud_security_assets_queries",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CloudSecurityAssets#cloud_security_assets_queries\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
