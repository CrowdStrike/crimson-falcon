=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

MIT License

Copyright (c) 2023 Crowdstrike

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::FalconContainerImage
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FalconContainerImage' do
  before(:all) do
    # run before each test
    @api_instance = Falcon::FalconContainerImage.new
  end

  after(:all) do
    # run after each test
  end

  describe 'test an instance of FalconContainerImage' do
    it 'should create an instance of FalconContainerImage' do
      expect(@api_instance).to be_instance_of(Falcon::FalconContainerImage)
    end
  end

  # unit tests for create_registry_entities
  # Create a registry entity using the provided details
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DomainExternalRegistryResponse]
  describe 'create_registry_entities test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_registry_entities
  # Delete the registry entity identified by the entity UUID
  # @param ids Registry entity UUID
  # @param [Hash] opts the optional parameters
  # @return [DomainExternalRegistryListResponse]
  describe 'delete_registry_entities test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for download_export_file
  # Download an export file
  # @param id Export job ID.
  # @param [Hash] opts the optional parameters
  # @return [Array<Integer>]
  describe 'download_export_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for launch_export_job
  # Launch an export job of a Container Security resource. Maximum of 1 job in progress per resource
  # @param body Supported resources: - &#x60;assets.clusters&#x60; - &#x60;assets.containers&#x60; - &#x60;assets.deployments&#x60; - &#x60;assets.images&#x60; - &#x60;assets.namespaces&#x60; - &#x60;assets.nodes&#x60; - &#x60;assets.pods&#x60; - &#x60;images.images-assessment-detections-expanded&#x60; - &#x60;images.images-assessment-expanded&#x60; - &#x60;images.images-assessment-vulnerabilities-expanded&#x60; - &#x60;images.images-assessment&#x60; - &#x60;images.images-detections&#x60; - &#x60;images.packages&#x60; - &#x60;images.vulnerabilities&#x60; - &#x60;investigate.container-alerts&#x60; - &#x60;investigate.drift-indicators&#x60; - &#x60;investigate.kubernetes-ioms&#x60; - &#x60;investigate.runtime-detections&#x60; - &#x60;investigate.unidentified-containers&#x60; - &#x60;network.events&#x60; - &#x60;policies.exclusions&#x60;
  # @param [Hash] opts the optional parameters
  # @return [ExportsLaunchExportResponse]
  describe 'launch_export_job test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for query_export_jobs
  # Query export jobs entities
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter Filter exports using a query in Falcon Query Language (FQL). Only the last 100 jobs are returned. Supported filter fields: - &#x60;resource&#x60; - &#x60;status&#x60;
  # @return [MsaspecQueryResponse]
  describe 'query_export_jobs test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for read_export_jobs
  # Read export jobs entities
  # @param ids Export Job IDs to read. Allowed up to 100 IDs per request.
  # @param [Hash] opts the optional parameters
  # @return [ExportsExportsResponse]
  describe 'read_export_jobs test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for read_registry_entities
  # Retrieves a list of registry entities identified by the customer id. Maximum page size: 5,000
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The upper-bound on the number of records to retrieve.
  # @option opts [Integer] :offset The offset from where to begin.
  # @option opts [String] :sort The fields to sort the records on.
  # @return [DomainExternalQueryResponse]
  describe 'read_registry_entities test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for read_registry_entities_by_uuid
  # Retrieves a list of registry entities by the provided UUIDs. Maximum page size: 100
  # @param ids Registry entity UUID
  # @param [Hash] opts the optional parameters
  # @return [DomainExternalRegistryListResponse]
  describe 'read_registry_entities_by_uuid test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_registry_entities
  # Update the registry entity, as identified by the entity UUID, using the provided details
  # @param id Registry entity UUID
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DomainExternalRegistryResponse]
  describe 'update_registry_entities test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
