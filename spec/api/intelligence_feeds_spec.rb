=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

MIT License

Copyright (c) 2023 Crowdstrike

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::IntelligenceFeeds
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'IntelligenceFeeds' do
  before(:all) do
    # run before each test
    @api_instance = Falcon::IntelligenceFeeds.new
  end

  after(:all) do
    # run after each test
  end

  describe 'test an instance of IntelligenceFeeds' do
    it 'should create an instance of IntelligenceFeeds' do
      expect(@api_instance).to be_instance_of(Falcon::IntelligenceFeeds)
    end
  end

  # unit tests for download_feed_archive
  # Downloads the content as a zip archive for a given feed item ID
  # @param feed_item_id Feed ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_feed_archive test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_feed_types
  # Lists the accessible feed types for a given customer
  # @param [Hash] opts the optional parameters
  # @return [RestapiIndicatorGetFeedsResponse]
  describe 'list_feed_types test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for query_feed_archives
  # Queries the accessible feed types for a customer. Returns a list of feed item IDs which can be later downloaded
  # @param feed_name Feed Name
  # @param feed_interval Feed interval must be one of: dump|daily|hourly|minutely
  # @param [Hash] opts the optional parameters
  # @option opts [String] :since Since is a valid timestamp in RFC3399 format. Restrictions: minutely: now()-2h, hourly: now()-2d, daily: now()-5d; dump: now()-7d
  # @return [RestapiIndicatorFeedQueryResponse]
  describe 'query_feed_archives test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
