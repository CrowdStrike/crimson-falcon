=begin
#CrowdStrike API Specification

#Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and more information about API endpoints that don't yet support OAuth2, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation). To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`. Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.

The version of the OpenAPI document: 2022-10-19T15:57:46Z

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::IocApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'IocApi' do
  before do
    # run before each test
    @api_instance = Falcon::IocApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of IocApi' do
    it 'should create an instance of IocApi' do
      expect(@api_instance).to be_instance_of(Falcon::IocApi)
    end
  end

  # unit tests for indicator_combined_v1
  # Get Combined for Indicators.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter The filter expression that should be used to limit the results.
  # @option opts [Integer] :offset The offset to start retrieving records from. Offset and After params are mutually exclusive. If none provided then scrolling will be used by default. To access more than 10k iocs, use the &#39;after&#39; parameter instead of &#39;offset&#39;.
  # @option opts [Integer] :limit The maximum records to return.
  # @option opts [String] :sort The sort expression that should be used to sort the results.
  # @option opts [String] :after A pagination token used with the &#x60;limit&#x60; parameter to manage pagination of results. On your first request, don&#39;t provide an &#39;after&#39; token. On subsequent requests, provide the &#39;after&#39; token from the previous response to continue from that place in the results. To access more than 10k indicators, use the &#39;after&#39; parameter instead of &#39;offset&#39;.
  # @option opts [Boolean] :from_parent The filter for returning either only indicators for the request customer or its MSSP parents
  # @return [ApiIndicatorRespV1]
  describe 'indicator_combined_v1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for indicator_create_v1
  # Create Indicators.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :retrodetects Whether to submit to retrodetects
  # @option opts [Boolean] :ignore_warnings Set to true to ignore warnings and add all IOCs
  # @return [ApiIndicatorRespV1]
  describe 'indicator_create_v1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for indicator_delete_v1
  # Delete Indicators by ids.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter The FQL expression to delete Indicators in bulk. If both &#39;filter&#39; and &#39;ids&#39; are provided, then filter takes precedence and ignores ids.
  # @option opts [Array<String>] :ids The ids of the Indicators to delete. If both &#39;filter&#39; and &#39;ids&#39; are provided, then filter takes precedence and ignores ids
  # @option opts [String] :comment The comment why these indicators were deleted
  # @return [ApiIndicatorQueryResponse]
  describe 'indicator_delete_v1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for indicator_get_v1
  # Get Indicators by ids.
  # @param ids The ids of the Indicators to retrieve
  # @param [Hash] opts the optional parameters
  # @return [ApiIndicatorRespV1]
  describe 'indicator_get_v1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for indicator_search_v1
  # Search for Indicators.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter The filter expression that should be used to limit the results.
  # @option opts [Integer] :offset The offset to start retrieving records from. Offset and After params are mutually exclusive. If none provided then scrolling will be used by default. To access more than 10k iocs, use the &#39;after&#39; parameter instead of &#39;offset&#39;.
  # @option opts [Integer] :limit The maximum records to return.
  # @option opts [String] :sort The sort expression that should be used to sort the results.
  # @option opts [String] :after A pagination token used with the &#x60;limit&#x60; parameter to manage pagination of results. On your first request, don&#39;t provide an &#39;after&#39; token. On subsequent requests, provide the &#39;after&#39; token from the previous response to continue from that place in the results. To access more than 10k indicators, use the &#39;after&#39; parameter instead of &#39;offset&#39;.
  # @return [ApiIndicatorQueryRespV1]
  describe 'indicator_search_v1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for indicator_update_v1
  # Update Indicators.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :retrodetects Whether to submit to retrodetects
  # @option opts [Boolean] :ignore_warnings Set to true to ignore warnings and add all IOCs
  # @return [ApiIndicatorRespV1]
  describe 'indicator_update_v1 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
