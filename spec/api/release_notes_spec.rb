=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

MIT License

Copyright (c) 2023 Crowdstrike

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::ReleaseNotes
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ReleaseNotes' do
  before(:all) do
    # run before each test
    @api_instance = Falcon::ReleaseNotes.new
  end

  after(:all) do
    # run after each test
  end

  describe 'test an instance of ReleaseNotes' do
    it 'should create an instance of ReleaseNotes' do
      expect(@api_instance).to be_instance_of(Falcon::ReleaseNotes)
    end
  end

  # unit tests for combined_release_notes_v1
  # Queries for release-notes resources and returns details
  # @param authorization authorization header
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_cs_username user name
  # @option opts [String] :filter FQL query specifying filter parameters.
  # @option opts [Integer] :limit Maximum number of records to return.
  # @option opts [String] :offset Starting pagination offset of records to return.
  # @option opts [String] :sort Sort items by providing a comma separated list of property and direction (eg name.desc,time.asc). If direction is omitted, defaults to descending.
  # @return [ReleasenotesReleaseNoteWrapperV1]
  describe 'combined_release_notes_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_entity_ids_by_query_post
  # returns the release notes for the IDs in the request
  # @param authorization authorization header
  # @param body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_cs_username user name
  # @return [ReleasenotesReleaseNoteWrapperV1]
  describe 'get_entity_ids_by_query_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for query_release_notes_v1
  # Queries for release-notes resources and returns ids
  # @param authorization authorization header
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_cs_username user name
  # @option opts [String] :filter FQL query specifying filter parameters.
  # @option opts [Integer] :limit Maximum number of records to return.
  # @option opts [String] :offset Starting pagination offset of records to return.
  # @option opts [String] :sort Sort items by providing a comma separated list of property and direction (eg name.desc,time.asc). If direction is omitted, defaults to descending.
  # @return [StringWrapper]
  describe 'query_release_notes_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
