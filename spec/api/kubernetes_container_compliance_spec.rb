=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

MIT License

Copyright (c) 2023 Crowdstrike

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::KubernetesContainerCompliance
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'KubernetesContainerCompliance' do
  before(:all) do
    # run before each test
    @api_instance = Falcon::KubernetesContainerCompliance.new
  end

  after(:all) do
    # run after each test
  end

  describe 'test an instance of KubernetesContainerCompliance' do
    it 'should create an instance of KubernetesContainerCompliance' do
      expect(@api_instance).to be_instance_of(Falcon::KubernetesContainerCompliance)
    end
  end

  # unit tests for aggregate_assessments_grouped_by_clusters_v2
  # Returns cluster details along with aggregated assessment results organized by cluster, including pass/fail assessment counts for various asset types.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset The zero-based position of the first record to return.
  # @option opts [Integer] :limit The maximum number of records to return. (1-500) Default is 20.
  # @option opts [String] :filter FQL filter expression used to limit the results. Filter fields include: cid, cloud_info.cloud_account_id, cloud_info.cloud_provider, cloud_info.cloud_region, cloud_info.cluster_id, cloud_info.cluster_name, cloud_info.cluster_type, compliance_finding.framework_name, compliance_finding.framework_name_version, compliance_finding.framework_version, compliance_finding.severity
  # @return [DomainAPIAggregateResponseGroupByClustersV2]
  describe 'aggregate_assessments_grouped_by_clusters_v2 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for aggregate_assessments_grouped_by_rules_v2
  # Returns rule details along with aggregated assessment results organized by compliance rule, including pass/fail assessment counts.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset The zero-based position of the first record to return.
  # @option opts [Integer] :limit The maximum number of records to return. (1-500) Default is 20.
  # @option opts [String] :filter FQL filter expression used to limit the results. Filter fields include: cid, cloud_info.cloud_account_id, cloud_info.cloud_provider, cloud_info.cloud_region, cloud_info.cluster_id, cloud_info.cluster_name, cloud_info.cluster_type, compliance_finding.asset_type, compliance_finding.framework_name, compliance_finding.framework_name_version, compliance_finding.framework_version, compliance_finding.id, compliance_finding.severity, compliance_finding.status
  # @return [DomainAPIAggregateResponseGroupByRulesV1]
  describe 'aggregate_assessments_grouped_by_rules_v2 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for aggregate_compliance_by_asset_type
  # Provides aggregated compliance assessment metrics and rule status information, organized by asset type.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter FQL filter expression used to limit the results. Filter fields include: cid, cloud_info.cloud_account_id, cloud_info.cloud_provider, cloud_info.cloud_region, cloud_info.cluster_id, cloud_info.cluster_name, cloud_info.cluster_type, compliance_finding.asset_type, compliance_finding.framework_name, compliance_finding.framework_name_version, compliance_finding.framework_version, compliance_finding.severity
  # @return [DomainAPIAggregateResponseComplianceByAssetTypeV1]
  describe 'aggregate_compliance_by_asset_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for aggregate_compliance_by_cluster_type
  # Provides aggregated compliance assessment metrics and rule status information, organized by Kubernetes cluster type.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter FQL filter expression used to limit the results. Filter fields include: cid, cloud_info.cloud_account_id, cloud_info.cloud_provider, cloud_info.cloud_region, cloud_info.cluster_id, cloud_info.cluster_name, cloud_info.cluster_type, compliance_finding.asset_type, compliance_finding.framework_name, compliance_finding.framework_name_version, compliance_finding.framework_version, compliance_finding.severity
  # @return [DomainAPIAggregateResponseComplianceByClusterTypeV1]
  describe 'aggregate_compliance_by_cluster_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for aggregate_compliance_by_framework
  # Provides aggregated compliance assessment metrics and rule status information, organized by compliance framework.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter FQL filter expression used to limit the results. Filter fields include: cid, cloud_info.cloud_account_id, cloud_info.cloud_provider, cloud_info.cloud_region, cloud_info.cluster_id, cloud_info.cluster_name, cloud_info.cluster_type, compliance_finding.asset_type, compliance_finding.framework_name, compliance_finding.framework_name_version, compliance_finding.framework_version, compliance_finding.severity
  # @return [DomainAPIAggregateResponseComplianceByFrameworkV1]
  describe 'aggregate_compliance_by_framework test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for aggregate_failed_rules_by_clusters_v3
  # Retrieves the most non-compliant clusters, ranked in descending order based on the number of failed compliance rules across severity levels (critical, high, medium, and low).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter FQL filter expression used to limit the results. Filter fields include: cid, cloud_info.cloud_account_id, cloud_info.cloud_provider, cloud_info.cloud_region, cloud_info.cluster_id, cloud_info.cluster_name, cloud_info.cluster_type, compliance_finding.asset_type, compliance_finding.framework_name, compliance_finding.framework_name_version, compliance_finding.framework_version, compliance_finding.severity
  # @option opts [Integer] :limit The maximum number of records to return. (1-100) Default is 10.
  # @return [DomainAPIAggregateResponseFailedRulesByClustersTypeV2]
  describe 'aggregate_failed_rules_by_clusters_v3 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for aggregate_top_failed_images
  # Retrieves the most non-compliant container images, ranked in descending order based on the number of failed assessments across severity levels (critical, high, medium, and low).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter FQL filter expression used to limit the results. Filter fields include: cid, cloud_info.cloud_account_id, cloud_info.cloud_provider, cloud_info.cloud_region, cloud_info.cluster_id, cloud_info.cluster_name, cloud_info.cluster_type, compliance_finding.asset_type, compliance_finding.framework_name, compliance_finding.framework_name_version, compliance_finding.framework_version, compliance_finding.severity
  # @option opts [Integer] :limit The maximum number of records to return. (1-100) Default is 10.
  # @return [DomainAPIAggregateResponseTopFailedImagesV1]
  describe 'aggregate_top_failed_images test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for combined_images_findings
  # Returns detailed compliance assessment results for container images, providing the information needed to identify compliance violations.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter FQL filter expression used to limit the results. Filter fields include: cid, cloud_info.cloud_account_id, cloud_info.cloud_provider, cloud_info.cloud_region, cloud_info.cluster_id, cloud_info.cluster_name, cloud_info.cluster_type, cloud_info.namespace, compliance_finding.asset_uid, compliance_finding.framework_name, compliance_finding.framework_name_version, compliance_finding.framework_version, compliance_finding.id, compliance_finding.severity, compliance_finding.status, image_digest, image_id, image_registry, image_repository, image_tag
  # @option opts [String] :after A pagination token used with the &#x60;limit&#x60; parameter to manage pagination of results. On your first request, don&#39;t provide an &#x60;after&#x60; token. On subsequent requests, provide the &#x60;after&#x60; token from the previous response to continue from that place in the results.
  # @option opts [Integer] :limit The maximum number of images for which assessments are to be returned: 1-100. Default is 100. Use with the after parameter to manage pagination of results.
  # @return [DomainAPIResponseImagesFindingsV1]
  describe 'combined_images_findings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for combined_nodes_findings
  # Returns detailed compliance assessment results for kubernetes nodes, providing the information needed to identify compliance violations.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter FQL filter expression used to limit the results. Filter fields include: cid, cloud_info.cloud_account_id, cloud_info.cloud_provider, cloud_info.cloud_region, cloud_info.cluster_id, cloud_info.cluster_name, cloud_info.cluster_type, compliance_finding.asset_type, compliance_finding.asset_uid, compliance_finding.framework_name, compliance_finding.framework_name_version, compliance_finding.framework_version, compliance_finding.id, compliance_finding.severity, compliance_finding.status, aid, node_id, node_name, node_type
  # @option opts [String] :after A pagination token used with the &#x60;limit&#x60; parameter to manage pagination of results. On your first request, don&#39;t provide an &#x60;after&#x60; token. On subsequent requests, provide the &#x60;after&#x60; token from the previous response to continue from that place in the results.
  # @option opts [Integer] :limit The maximum number of nodes for which assessments are to be returned: 1-100. Default is 100. Use with the after parameter to manage pagination of results.
  # @return [DomainAPIResponseNodesFindingsV1]
  describe 'combined_nodes_findings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_rules_metadata_by_id
  # Retrieve detailed compliance rule information including descriptions, remediation steps, and audit procedures by specifying rule identifiers.
  # @param ids comma separated list of rule ids
  # @param [Hash] opts the optional parameters
  # @return [DomainRuleMetadataResponse]
  describe 'get_rules_metadata_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
