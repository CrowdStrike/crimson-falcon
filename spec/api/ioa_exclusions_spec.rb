=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

MIT License

Copyright (c) 2023 Crowdstrike

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::IoaExclusions
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'IoaExclusions' do
  before(:all) do
    # run before each test
    @api_instance = Falcon::IoaExclusions.new
  end

  after(:all) do
    # run after each test
  end

  describe 'test an instance of IoaExclusions' do
    it 'should create an instance of IoaExclusions' do
      expect(@api_instance).to be_instance_of(Falcon::IoaExclusions)
    end
  end

  # unit tests for create_ioa_exclusions_v1
  # Create the IOA exclusions
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [IoaExclusionsIoaExclusionsRespV1]
  describe 'create_ioa_exclusions_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_ioa_exclusions_v1
  # Delete the IOA exclusions by id
  # @param ids The ids of the exclusions to delete
  # @param [Hash] opts the optional parameters
  # @option opts [String] :comment Explains why this exclusions was deleted
  # @return [MsaQueryResponse]
  describe 'delete_ioa_exclusions_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_ioa_exclusions_v1
  # Get a set of IOA Exclusions by specifying their IDs
  # @param ids The ids of the exclusions to retrieve
  # @param [Hash] opts the optional parameters
  # @return [IoaExclusionsIoaExclusionsRespV1]
  describe 'get_ioa_exclusions_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for query_ioa_exclusions_v1
  # Search for IOA exclusions.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter The filter expression that should be used to limit the results. Filtered queries involving regex fields should specify their expressions in the &#x60;ifn_regex&#x60; and &#x60;cl_regex&#x60; parameters.
  # @option opts [String] :ifn_regex The &#x60;ifn_regex&#x60; expression to filter exclusions by, used alongside expressions specified in the filter query parameter.
  # @option opts [String] :cl_regex The &#x60;cl_regex&#x60; expression to filter exclusions by, used alongside expressions specified in the filter query parameter.
  # @option opts [Integer] :offset The offset to start retrieving records from
  # @option opts [Integer] :limit The maximum records to return. [1-500]
  # @option opts [String] :sort The sort expression that should be used to sort the results.
  # @return [MsaQueryResponse]
  describe 'query_ioa_exclusions_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_ioa_exclusions_v1
  # Update the IOA exclusions
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [IoaExclusionsIoaExclusionsRespV1]
  describe 'update_ioa_exclusions_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
