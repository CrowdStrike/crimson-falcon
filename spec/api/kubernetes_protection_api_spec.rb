=begin
#CrowdStrike API Specification

#Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and more information about API endpoints that don't yet support OAuth2, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation). To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`. Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.

The version of the OpenAPI document: 2022-10-19T15:57:46Z

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::KubernetesProtectionApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'KubernetesProtectionApi' do
  before do
    # run before each test
    @api_instance = Falcon::KubernetesProtectionApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of KubernetesProtectionApi' do
    it 'should create an instance of KubernetesProtectionApi' do
      expect(@api_instance).to be_instance_of(Falcon::KubernetesProtectionApi)
    end
  end

  # unit tests for create_aws_account
  # Creates a new AWS account in our system for a customer and generates the installation script
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [K8sregCreateAWSAccReq]
  describe 'create_aws_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_aws_accounts_mixin0
  # Delete AWS accounts.
  # @param ids AWS Account IDs
  # @param [Hash] opts the optional parameters
  # @return [MsaMetaInfo]
  describe 'delete_aws_accounts_mixin0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_aws_accounts_mixin0
  # Provides a list of AWS accounts.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :ids AWS Account IDs
  # @option opts [String] :status Filter by account status
  # @option opts [Integer] :limit Limit returned accounts
  # @option opts [Integer] :offset Offset returned accounts
  # @return [K8sregGetAWSAccountsResp]
  describe 'get_aws_accounts_mixin0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_clusters
  # Provides the clusters acknowledged by the Kubernetes Protection service
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :cluster_names Cluster name. For EKS it will be cluster ARN.
  # @option opts [Array<String>] :account_ids Cluster Account id. For EKS it will be AWS account ID.
  # @option opts [Array<String>] :locations Cloud location
  # @option opts [String] :cluster_service Cluster Service
  # @option opts [Integer] :limit Limit returned accounts
  # @option opts [Integer] :offset Offset returned accounts
  # @return [K8sregGetClustersResp]
  describe 'get_clusters test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_helm_values_yaml
  # Provides a sample Helm values.yaml file for a customer to install alongside the agent Helm chart
  # @param cluster_name Cluster name. For EKS it will be cluster ARN.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'get_helm_values_yaml test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_locations
  # Provides the cloud locations acknowledged by the Kubernetes Protection service
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :clouds Cloud Provider
  # @return [K8sregGetLocationsResp]
  describe 'get_locations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for regenerate_api_key
  # Regenerate API key for docker registry integrations
  # @param [Hash] opts the optional parameters
  # @return [K8sregRegenAPIKeyResp]
  describe 'regenerate_api_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for trigger_scan
  # Triggers a dry run or a full scan of a customer&#39;s kubernetes footprint
  # @param scan_type Scan Type to do
  # @param [Hash] opts the optional parameters
  # @return [MsaBaseEntitiesResponse]
  describe 'trigger_scan test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_aws_account
  # Updates the AWS account per the query parameters provided
  # @param ids AWS Account ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :region Default Region for Account Automation
  # @return [MsaBaseEntitiesResponse]
  describe 'update_aws_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
