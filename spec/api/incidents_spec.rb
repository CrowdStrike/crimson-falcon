=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

MIT License

Copyright (c) 2023 Crowdstrike

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::Incidents
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'Incidents' do
  before do
    # run before each test
    @api_instance = Falcon::Incidents.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of Incidents' do
    it 'should create an instance of Incidents' do
      expect(@api_instance).to be_instance_of(Falcon::Incidents)
    end
  end

  # unit tests for crowd_score
  # Query environment wide CrowdScore and return the entity data
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter Optional filter and sort criteria in the form of an FQL query. For more information about FQL queries, see [our FQL documentation in Falcon](https://falcon.crowdstrike.com/support/documentation/45/falcon-query-language-feature-guide).
  # @option opts [Integer] :offset Starting index of overall result set from which to return ids.
  # @option opts [Integer] :limit The maximum records to return. [1-2500]
  # @option opts [String] :sort The property to sort on, followed by a dot (.), followed by the sort direction, either \&quot;asc\&quot; or \&quot;desc\&quot;.
  # @return [DomainMsaEnvironmentScoreResponse]
  describe 'crowd_score test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_behaviors
  # Get details on behaviors by providing behavior IDs
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DomainMsaExternalBehaviorResponse]
  describe 'get_behaviors test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_incidents
  # Get details on incidents by providing incident IDs
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DomainMsaExternalIncidentResponse]
  describe 'get_incidents test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for perform_incident_action
  # Perform a set of actions on one or more incidents, such as adding tags or comments or updating the incident name or description
  # @param body Incident Update request body containing minimum 1 and maximum 5000 Incident ID(s) and action param(s) to be performed action against.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :update_detects If true, update assigned-to-uuid and or status of detections associated with the incident(s). Defaults to false
  # @option opts [Boolean] :overwrite_detects If true and update-detects is true, the assigned-to-uuid or status for ALL detections associated with the incident(s) will be overwritten. If false, only detects that have default values for assigned-to-uuid and/or status will be updated. Defaults to false. Ignored if &#39;update-detects&#39; is missing or false.
  # @return [DomainMsaIncidentPerformActionResponse]
  describe 'perform_incident_action test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for query_behaviors
  # Search for behaviors by providing an FQL filter, sorting, and paging details
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter Optional filter and sort criteria in the form of an FQL query. For more information about FQL queries, see [our FQL documentation in Falcon](https://falcon.crowdstrike.com/support/documentation/45/falcon-query-language-feature-guide).
  # @option opts [Integer] :offset Starting index of overall result set from which to return ids.
  # @option opts [Integer] :limit The maximum records to return. [1-500]
  # @option opts [String] :sort The property to sort on, followed by a dot (.), followed by the sort direction, either \&quot;asc\&quot; or \&quot;desc\&quot;.
  # @return [MsaQueryResponse]
  describe 'query_behaviors test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for query_incidents
  # Search for incidents by providing an FQL filter, sorting, and paging details
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort The property to sort on, followed by a dot (.), followed by the sort direction, either \&quot;asc\&quot; or \&quot;desc\&quot;.
  # @option opts [String] :filter Optional filter and sort criteria in the form of an FQL query. For more information about FQL queries, see [our FQL documentation in Falcon](https://falcon.crowdstrike.com/support/documentation/45/falcon-query-language-feature-guide).
  # @option opts [Integer] :offset Starting index of overall result set from which to return ids.
  # @option opts [Integer] :limit The maximum records to return. [1-500]
  # @return [DomainMsaIncidentQueryResponse]
  describe 'query_incidents test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
