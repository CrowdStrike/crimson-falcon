=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

MIT License

Copyright (c) 2023 Crowdstrike

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::FoundryLogscale
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FoundryLogscale' do
  before(:all) do
    # run before each test
    @api_instance = Falcon::FoundryLogscale.new
  end

  after(:all) do
    # run after each test
  end

  describe 'test an instance of FoundryLogscale' do
    it 'should create an instance of FoundryLogscale' do
      expect(@api_instance).to be_instance_of(Falcon::FoundryLogscale)
    end
  end

  # unit tests for create_saved_searches_dynamic_execute_alt_v1
  # Execute a dynamic saved search
  # @param body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :app_id Application ID.
  # @option opts [Boolean] :include_schema_generation Include generated schemas in the response
  # @option opts [Boolean] :include_test_data Include test data when executing searches
  # @option opts [Boolean] :infer_json_types Whether to try to infer data types in json event response instead of returning map[string]string
  # @option opts [Boolean] :match_response_schema Whether to validate search results against their schema
  # @option opts [Boolean] :metadata Whether to include metadata in the response
  # @option opts [String] :mode Mode to execute the query under.
  # @option opts [String] :x_cs_useruuid Requester UUID.
  # @return [ApidomainQueryResponseWrapperV1]
  describe 'create_saved_searches_dynamic_execute_alt_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_saved_searches_dynamic_execute_v1
  # Execute a dynamic saved search
  # @param body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :app_id Application ID.
  # @option opts [Boolean] :include_schema_generation Include generated schemas in the response
  # @option opts [Boolean] :include_test_data Include test data when executing searches
  # @option opts [Boolean] :infer_json_types Whether to try to infer data types in json event response instead of returning map[string]string
  # @option opts [Boolean] :match_response_schema Whether to validate search results against their schema
  # @option opts [Boolean] :metadata Whether to include metadata in the response
  # @option opts [String] :mode Mode to execute the query under.
  # @option opts [String] :x_cs_useruuid Requester UUID.
  # @return [ApidomainQueryResponseWrapperV1]
  describe 'create_saved_searches_dynamic_execute_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_saved_searches_execute_alt_v1
  # Execute a saved search
  # @param body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :app_id Application ID.
  # @option opts [Boolean] :detailed Whether to include search field details
  # @option opts [Boolean] :include_test_data Include test data when executing searches
  # @option opts [Boolean] :infer_json_types Whether to try to infer data types in json event response instead of returning map[string]string
  # @option opts [Boolean] :match_response_schema Whether to validate search results against their schema
  # @option opts [Boolean] :metadata Whether to include metadata in the response
  # @option opts [String] :x_cs_useruuid Requester UUID.
  # @return [ApidomainQueryResponseWrapperV1]
  describe 'create_saved_searches_execute_alt_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_saved_searches_execute_v1
  # Execute a saved search
  # @param body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :app_id Application ID.
  # @option opts [Boolean] :detailed Whether to include search field details
  # @option opts [Boolean] :include_test_data Include test data when executing searches
  # @option opts [Boolean] :infer_json_types Whether to try to infer data types in json event response instead of returning map[string]string
  # @option opts [Boolean] :match_response_schema Whether to validate search results against their schema
  # @option opts [Boolean] :metadata Whether to include metadata in the response
  # @option opts [String] :x_cs_useruuid Requester UUID.
  # @return [ApidomainQueryResponseWrapperV1]
  describe 'create_saved_searches_execute_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_saved_searches_ingest_alt_v1
  # Populate a saved search
  # @param [Hash] opts the optional parameters
  # @option opts [String] :app_id Application ID.
  # @return [ClientDataIngestResponseWrapperV1]
  describe 'create_saved_searches_ingest_alt_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_saved_searches_ingest_v1
  # Populate a saved search
  # @param [Hash] opts the optional parameters
  # @option opts [String] :app_id Application ID.
  # @return [ClientDataIngestResponseWrapperV1]
  describe 'create_saved_searches_ingest_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_saved_searches_execute_alt_v1
  # Get the results of a saved search
  # @param job_id Job ID for a previously executed async query
  # @param [Hash] opts the optional parameters
  # @option opts [String] :app_id Application ID.
  # @option opts [Boolean] :infer_json_types Whether to try to infer data types in json event response instead of returning map[string]string
  # @option opts [Boolean] :job_status_only If set to true, result rows are dropped from the response and only the job status is returned
  # @option opts [String] :limit Maximum number of records to return.
  # @option opts [Boolean] :match_response_schema Whether to validate search results against their schema
  # @option opts [Boolean] :metadata Whether to include metadata in the response
  # @option opts [String] :offset Starting pagination offset of records to return.
  # @option opts [String] :x_cs_useruuid Requester UUID.
  # @return [ApidomainQueryResponseWrapperV1]
  describe 'get_saved_searches_execute_alt_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_saved_searches_execute_v1
  # Get the results of a saved search
  # @param job_id Job ID for a previously executed async query
  # @param [Hash] opts the optional parameters
  # @option opts [String] :app_id Application ID.
  # @option opts [Boolean] :infer_json_types Whether to try to infer data types in json event response instead of returning map[string]string
  # @option opts [Boolean] :job_status_only If set to true, result rows are dropped from the response and only the job status is returned
  # @option opts [String] :limit Maximum number of records to return.
  # @option opts [Boolean] :match_response_schema Whether to validate search results against their schema
  # @option opts [Boolean] :metadata Whether to include metadata in the response
  # @option opts [String] :offset Starting pagination offset of records to return.
  # @option opts [String] :x_cs_useruuid Requester UUID.
  # @return [ApidomainQueryResponseWrapperV1]
  describe 'get_saved_searches_execute_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_saved_searches_job_results_download_alt_v1
  # Get the results of a saved search as a file
  # @param job_id Job ID for a previously executed async query
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :infer_json_types Whether to try to infer data types in json event response instead of returning map[string]string
  # @option opts [String] :result_format Result Format
  # @return [File]
  describe 'get_saved_searches_job_results_download_alt_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_saved_searches_job_results_download_v1
  # Get the results of a saved search as a file
  # @param job_id Job ID for a previously executed async query
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :infer_json_types Whether to try to infer data types in json event response instead of returning map[string]string
  # @option opts [String] :result_format Result Format
  # @return [File]
  describe 'get_saved_searches_job_results_download_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for ingest_data_async_v1
  # Asynchronously ingest data into the application repository
  # @param [Hash] opts the optional parameters
  # @option opts [String] :data_content JSON data to ingest
  # @option opts [File] :data_file Data file to ingest
  # @option opts [String] :repo Repository name if not part of a foundry app
  # @option opts [Array<String>] :tag Custom tag for ingested data in the form tag:value
  # @option opts [String] :tag_source Tag the data with the specified source
  # @option opts [Boolean] :test_data Tag the data with test-ingest
  # @return [ClientDataIngestResponseWrapperV1]
  describe 'ingest_data_async_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for ingest_data_v1
  # Synchronously ingest data into the application repository
  # @param [Hash] opts the optional parameters
  # @option opts [String] :data_content JSON data to ingest
  # @option opts [File] :data_file Data file to ingest
  # @option opts [Array<String>] :tag Custom tag for ingested data in the form tag:value
  # @option opts [String] :tag_source Tag the data with the specified source
  # @option opts [Boolean] :test_data Tag the data with test-ingest
  # @return [ClientDataIngestResponseWrapperV1]
  describe 'ingest_data_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_repos_v1
  # Lists available repositories and views
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :check_test_data Include whether test data is present in the application repository
  # @return [ApidomainRepoViewListItemWrapperV1]
  describe 'list_repos_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_view_v1
  # List views
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :check_test_data Include whether test data is present in the application repository
  # @return [ApidomainRepoViewListItemWrapperV1]
  describe 'list_view_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
