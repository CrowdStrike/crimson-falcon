=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

MIT License

Copyright (c) 2023 Crowdstrike

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::CloudSnapshots
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CloudSnapshots' do
  before(:all) do
    # run before each test
    @api_instance = Falcon::CloudSnapshots.new
  end

  after(:all) do
    # run after each test
  end

  describe 'test an instance of CloudSnapshots' do
    it 'should create an instance of CloudSnapshots' do
      expect(@api_instance).to be_instance_of(Falcon::CloudSnapshots)
    end
  end

  # unit tests for create_deployment_entity
  # Launch a snapshot scan for a given cloud asset
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DeploymentsEntityResponse]
  describe 'create_deployment_entity test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_credentials_mixin0_mixin57
  # Gets the registry credentials
  # @param [Hash] opts the optional parameters
  # @return [ModelsRegistryCredentialsResponse]
  describe 'get_credentials_mixin0_mixin57 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_scan_report
  # retrieve the scan report for an instance
  # @param ids the instance identifiers to fetch the report for
  # @param [Hash] opts the optional parameters
  # @return [ScanreportsEntitiesResponse]
  describe 'get_scan_report test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for read_deployments_combined
  # Retrieve snapshot jobs identified by the provided IDs
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter Search snapshot jobs using a query in Falcon Query Language (FQL). Supported filters:  account_id,asset_identifier,cloud_provider,region,status
  # @option opts [Integer] :limit The upper-bound on the number of records to retrieve.
  # @option opts [Integer] :offset The offset from where to begin.
  # @option opts [String] :sort The fields to sort the records on. Supported columns:  [account_id asset_identifier cloud_provider instance_type last_updated_timestamp region status]
  # @return [DeploymentsEntityResponse]
  describe 'read_deployments_combined test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for read_deployments_entities
  # Retrieve snapshot jobs identified by the provided IDs
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :ids Search snapshot jobs by ids - The maximum amount is 100 IDs
  # @return [DeploymentsEntityResponse]
  describe 'read_deployments_entities test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for register_cspm_snapshot_account
  # Register customer cloud account for snapshot scanning
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [ModelsAccountStatusResponse]
  describe 'register_cspm_snapshot_account test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
