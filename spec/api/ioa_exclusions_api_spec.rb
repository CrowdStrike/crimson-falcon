=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

This is free and unencumbered software released into the public domain.

Anyone is free to copy, modify, publish, use, compile, sell, or
distribute this software, either in source code form or as a compiled
binary, for any purpose, commercial or non-commercial, and by any
means.

In jurisdictions that recognize copyright laws, the author or authors
of this software dedicate any and all copyright interest in the
software to the public domain. We make this dedication for the benefit
of the public at large and to the detriment of our heirs and
successors. We intend this dedication to be an overt act of
relinquishment in perpetuity of all present and future rights to this
software under copyright law.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

For more information, please refer to <https://unlicense.org>

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::IoaExclusionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'IoaExclusionsApi' do
  before do
    # run before each test
    @api_instance = Falcon::IoaExclusionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of IoaExclusionsApi' do
    it 'should create an instance of IoaExclusionsApi' do
      expect(@api_instance).to be_instance_of(Falcon::IoaExclusionsApi)
    end
  end

  # unit tests for create_ioa_exclusions_v1
  # Create the IOA exclusions
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [IoaExclusionsIoaExclusionsRespV1]
  describe 'create_ioa_exclusions_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_ioa_exclusions_v1
  # Delete the IOA exclusions by id
  # @param ids The ids of the exclusions to delete
  # @param [Hash] opts the optional parameters
  # @option opts [String] :comment Explains why this exclusions was deleted
  # @return [MsaQueryResponse]
  describe 'delete_ioa_exclusions_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_ioa_exclusions_v1
  # Get a set of IOA Exclusions by specifying their IDs
  # @param ids The ids of the exclusions to retrieve
  # @param [Hash] opts the optional parameters
  # @return [IoaExclusionsIoaExclusionsRespV1]
  describe 'get_ioa_exclusions_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for query_ioa_exclusions_v1
  # Search for IOA exclusions.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter The filter expression that should be used to limit the results.
  # @option opts [Integer] :offset The offset to start retrieving records from
  # @option opts [Integer] :limit The maximum records to return. [1-500]
  # @option opts [String] :sort The sort expression that should be used to sort the results.
  # @return [MsaQueryResponse]
  describe 'query_ioa_exclusions_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_ioa_exclusions_v1
  # Update the IOA exclusions
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [IoaExclusionsIoaExclusionsRespV1]
  describe 'update_ioa_exclusions_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
