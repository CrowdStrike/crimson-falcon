=begin
#CrowdStrike API Specification

#Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and more information about API endpoints that don't yet support OAuth2, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation). To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`. Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.

The version of the OpenAPI document: 2022-10-19T15:57:46Z

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::CspmRegistrationApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CspmRegistrationApi' do
  before do
    # run before each test
    @api_instance = Falcon::CspmRegistrationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CspmRegistrationApi' do
    it 'should create an instance of CspmRegistrationApi' do
      expect(@api_instance).to be_instance_of(Falcon::CspmRegistrationApi)
    end
  end

  # unit tests for azure_download_certificate
  # Returns JSON object(s) that contain the base64 encoded certificate for a service principal.
  # @param tenant_id Azure Tenant ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :refresh 
  # @return [RegistrationAzureDownloadCertificateResponseV1]
  describe 'azure_download_certificate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_cspm_aws_account
  # Creates a new account in our system for a customer and generates a script for them to run in their AWS cloud environment to grant us access.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [RegistrationAWSAccountResponseV2]
  describe 'create_cspm_aws_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_cspm_azure_account
  # Creates a new account in our system for a customer and generates a script for them to run in their cloud environment to grant us access.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [RegistrationAzureAccountResponseV1]
  describe 'create_cspm_azure_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_cspm_aws_account
  # Deletes an existing AWS account or organization in our system.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :ids AWS account IDs to remove
  # @option opts [Array<String>] :organization_ids AWS organization IDs to remove
  # @return [RegistrationBaseResponseV1]
  describe 'delete_cspm_aws_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_cspm_azure_account
  # Deletes an Azure subscription from the system.
  # @param ids Azure subscription IDs to remove
  # @param [Hash] opts the optional parameters
  # @return [RegistrationBaseResponseV1]
  describe 'delete_cspm_azure_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_behavior_detections
  # Get list of detected behaviors
  # @param cloud_provider Cloud Provider (e.g.: aws|azure)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :service Cloud Service (e.g. EC2 | EBS | S3)
  # @option opts [String] :account_id Cloud Account ID (e.g.: AWS accountID, Azure subscriptionID)
  # @option opts [String] :aws_account_id AWS Account ID
  # @option opts [String] :azure_subscription_id Azure Subscription ID
  # @option opts [String] :azure_tenant_id Azure Tenant ID
  # @option opts [String] :state State (e.g.: open | closed)
  # @option opts [String] :date_time_since Filter to get all events after this date, in format RFC3339 : e.g. 2006-01-02T15:04:05Z07:00
  # @option opts [String] :severity Severity (e.g.: High | Medium | Informational)
  # @option opts [String] :next_token String to get next page of results, is associated with a previous execution of GetBehaviorDetections. Must include all filters from previous execution.
  # @option opts [Integer] :limit The maximum records to return. [1-500]
  # @return [RegistrationExternalIOAEventResponse]
  describe 'get_behavior_detections test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_configuration_detections
  # Get list of active misconfigurations
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cloud_provider Cloud Provider (e.g.: aws|azure|gcp)
  # @option opts [String] :account_id AWS account ID or GCP Project Number or Azure subscription ID
  # @option opts [String] :azure_subscription_id Azure Subscription ID
  # @option opts [String] :azure_tenant_id Azure Tenant ID
  # @option opts [String] :status Status (e.g.: new|reoccurring|all)
  # @option opts [String] :region Cloud Provider Region
  # @option opts [String] :severity Severity (e.g.: High | Medium | Informational)
  # @option opts [String] :service Cloud Service (e.g.: EBS|EC2|S3 etc.)
  # @option opts [String] :next_token String to get next page of results, is associated with a previous execution of GetConfigurationDetections. Cannot be combined with any filter except limit.
  # @option opts [Integer] :limit The maximum records to return. [1-500]
  # @return [RegistrationExternalIOMEventResponse]
  describe 'get_configuration_detections test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cspm_aws_account
  # Returns information about the current status of an AWS account.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scan_type Type of scan, dry or full, to perform on selected accounts
  # @option opts [Array<String>] :ids AWS account IDs
  # @option opts [Array<String>] :organization_ids AWS organization IDs
  # @option opts [String] :status Account status to filter results by.
  # @option opts [Integer] :limit The maximum records to return. Defaults to 100.
  # @option opts [Integer] :offset The offset to start retrieving records from
  # @option opts [String] :group_by Field to group by.
  # @return [RegistrationAWSAccountResponseV2]
  describe 'get_cspm_aws_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cspm_aws_account_scripts_attachment
  # Return a script for customer to run in their cloud environment to grant us access to their AWS environment as a downloadable attachment.
  # @param [Hash] opts the optional parameters
  # @return [RegistrationAWSProvisionGetAccountScriptResponseV2]
  describe 'get_cspm_aws_account_scripts_attachment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cspm_aws_console_setup_urls
  # Return a URL for customer to visit in their cloud environment to grant us access to their AWS environment.
  # @param [Hash] opts the optional parameters
  # @return [RegistrationAWSAccountConsoleURL]
  describe 'get_cspm_aws_console_setup_urls test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cspm_azure_account
  # Return information about Azure account registration
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :ids SubscriptionIDs of accounts to select for this status operation. If this is empty then all accounts are returned.
  # @option opts [String] :scan_type Type of scan, dry or full, to perform on selected accounts
  # @option opts [String] :status Account status to filter results by.
  # @option opts [Integer] :limit The maximum records to return. Defaults to 100.
  # @option opts [Integer] :offset The offset to start retrieving records from
  # @return [RegistrationAzureAccountResponseV1]
  describe 'get_cspm_azure_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cspm_azure_user_scripts_attachment
  # Return a script for customer to run in their cloud environment to grant us access to their Azure environment as a downloadable attachment
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_id Tenant ID to generate script for. Defaults to most recently registered tenant.
  # @return [RegistrationAzureProvisionGetUserScriptResponseV1]
  describe 'get_cspm_azure_user_scripts_attachment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cspm_policy
  # Given a policy ID, returns detailed policy information.
  # @param ids Policy ID
  # @param [Hash] opts the optional parameters
  # @return [RegistrationPolicyResponseV1]
  describe 'get_cspm_policy test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cspm_policy_settings
  # Returns information about current policy settings.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :service Service type to filter policy settings by.
  # @option opts [String] :policy_id Policy ID
  # @option opts [String] :cloud_platform Cloud Platform (e.g.: aws|azure|gcp)
  # @return [RegistrationPolicySettingsResponseV1]
  describe 'get_cspm_policy_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cspm_scan_schedule
  # Returns scan schedule configuration for one or more cloud platforms.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :cloud_platform Cloud Platform
  # @return [RegistrationScanScheduleResponseV1]
  describe 'get_cspm_scan_schedule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ioa_events
  # For CSPM IOA events, gets list of IOA events.
  # @param policy_id Policy ID
  # @param cloud_provider Cloud Provider (e.g.: aws|azure|gcp)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :account_id Cloud account ID (e.g.: AWS accountID, Azure subscriptionID)
  # @option opts [String] :aws_account_id AWS accountID
  # @option opts [String] :azure_subscription_id Azure subscription ID
  # @option opts [String] :azure_tenant_id Azure tenant ID
  # @option opts [Array<String>] :user_ids user IDs
  # @option opts [String] :state state
  # @option opts [Integer] :offset Starting index of overall result set from which to return events.
  # @option opts [Integer] :limit The maximum records to return. [1-500]
  # @return [RegistrationExternalIOAEventResponse]
  describe 'get_ioa_events test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ioa_users
  # For CSPM IOA users, gets list of IOA users.
  # @param policy_id Policy ID
  # @param cloud_provider Cloud Provider (e.g.: aws|azure|gcp)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :state state
  # @option opts [String] :account_id Cloud account ID (e.g.: AWS accountID, Azure subscriptionID)
  # @option opts [String] :aws_account_id AWS accountID
  # @option opts [String] :azure_subscription_id Azure subscription ID
  # @option opts [String] :azure_tenant_id Azure tenant ID
  # @return [RegistrationIOAUserResponse]
  describe 'get_ioa_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_cspm_aws_account
  # Patches a existing account in our system for a customer.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [RegistrationAWSAccountResponseV2]
  describe 'patch_cspm_aws_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_cspm_azure_account_client_id
  # Update an Azure service account in our system by with the user-created client_id created with the public key we&#39;ve provided
  # @param id ClientID to use for the Service Principal associated with the customer&#39;s Azure account
  # @param body This is a placeholder only. Please ignore this field.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_id Tenant ID to update client ID for. Required if multiple tenants are registered.
  # @return [RegistrationAzureServicePrincipalResponseV1]
  describe 'update_cspm_azure_account_client_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_cspm_azure_tenant_default_subscription_id
  # Update an Azure default subscription_id in our system for given tenant_id
  # @param subscription_id Default Subscription ID to patch for all subscriptions belonged to a tenant.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :tenant_id Tenant ID to update client ID for. Required if multiple tenants are registered.
  # @return [RegistrationAzureTenantDefaultSubscriptionIDResponseV1]
  describe 'update_cspm_azure_tenant_default_subscription_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_cspm_policy_settings
  # Updates a policy setting - can be used to override policy severity or to disable a policy entirely.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [RegistrationPolicySettingsResponseV1]
  describe 'update_cspm_policy_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_cspm_scan_schedule
  # Updates scan schedule configuration for one or more cloud platforms.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [RegistrationScanScheduleResponseV1]
  describe 'update_cspm_scan_schedule test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
