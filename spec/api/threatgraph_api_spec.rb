=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

MIT License

Copyright (c) 2023 Crowdstrike

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::ThreatgraphApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ThreatgraphApi' do
  before do
    # run before each test
    @api_instance = Falcon::ThreatgraphApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ThreatgraphApi' do
    it 'should create an instance of ThreatgraphApi' do
      expect(@api_instance).to be_instance_of(Falcon::ThreatgraphApi)
    end
  end

  # unit tests for combined_edges_get
  # Retrieve edges for a given vertex id.  One edge type must be specified
  # @param ids Vertex ID to get details for.  Only one value is supported
  # @param edge_type The type of edges that you would like to retrieve
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit How many edges to return in a single request [1-100]
  # @option opts [String] :offset The offset to use to retrieve the next page of results
  # @option opts [String] :direction The direction of edges that you would like to retrieve.
  # @option opts [String] :scope Scope of the request
  # @option opts [Boolean] :nano Return nano-precision entity timestamps
  # @return [nil]
  describe 'combined_edges_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for combined_ran_on_get
  # Look up instances of indicators such as hashes, domain names, and ip addresses that have been seen on devices in your environment.
  # @param value The value of the indicator to search by.
  # @param type The type of indicator that you would like to retrieve
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit How many edges to return in a single request [1-100]
  # @option opts [String] :offset The offset to use to retrieve the next page of results
  # @option opts [Boolean] :nano Return nano-precision entity timestamps
  # @return [nil]
  describe 'combined_ran_on_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for combined_summary_get
  # Retrieve summary for a given vertex ID
  # @param vertex_type Type of vertex to get properties for
  # @param ids Vertex ID to get details for
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scope Scope of the request
  # @option opts [Boolean] :nano Return nano-precision entity timestamps
  # @return [nil]
  describe 'combined_summary_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for entities_vertices_get
  # Retrieve metadata for a given vertex ID. Note: This is a legacy endpoint used by CrowdStrike Store partners prior to release of the ThreatGraph OAuth 2.0 APIs. If youâ€™re not currently using this endpoint, use the /v2 endpoint instead.
  # @param vertex_type Type of vertex to get properties for
  # @param ids Vertex ID to get details for
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scope Scope of the request
  # @option opts [Boolean] :nano Return nano-precision entity timestamps
  # @return [ThreatgraphVertexDetailsResponse]
  describe 'entities_vertices_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for entities_vertices_getv2
  # Retrieve metadata for a given vertex ID
  # @param vertex_type Type of vertex to get properties for
  # @param ids Vertex ID to get details for
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scope Scope of the request
  # @option opts [Boolean] :nano Return nano-precision entity timestamps
  # @return [ThreatgraphVertexDetailsResponse]
  describe 'entities_vertices_getv2 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for queries_edgetypes_get
  # Show all available edge types
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'queries_edgetypes_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
