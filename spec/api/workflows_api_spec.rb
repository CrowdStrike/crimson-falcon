=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

MIT License

Copyright (c) 2023 Crowdstrike

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::WorkflowsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'WorkflowsApi' do
  before do
    # run before each test
    @api_instance = Falcon::WorkflowsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WorkflowsApi' do
    it 'should create an instance of WorkflowsApi' do
      expect(@api_instance).to be_instance_of(Falcon::WorkflowsApi)
    end
  end

  # unit tests for workflow_activities_combined
  # Search for activities by name. Returns all supported activities if no filter specified
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter FQL query specifying filter parameters.
  # @option opts [String] :offset Starting pagination offset of records to return.
  # @option opts [Integer] :limit Maximum number of records to return.
  # @option opts [String] :sort Sort items by providing a comma separated list of property and direction (eg name.desc,time.asc). If direction is omitted, defaults to descending.
  # @return [ActivitiesActivityExternalResponse]
  describe 'workflow_activities_combined test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_definitions_combined
  # Search workflow definitions based on the provided filter
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter FQL query specifying filter parameters.
  # @option opts [String] :offset Starting pagination offset of records to return.
  # @option opts [Integer] :limit Maximum number of records to return.
  # @option opts [String] :sort Sort items by providing a comma separated list of property and direction (eg name.desc,time.asc). If direction is omitted, defaults to descending.
  # @return [DefinitionsDefinitionExternalResponse]
  describe 'workflow_definitions_combined test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_definitions_export
  # Exports a workflow definition for the given definition ID
  # @param id ID of workflow definitions to return details for
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :sanitize whether or not to sanitize PII from workflow before it&#39;s exported
  # @return [Array<Integer>]
  describe 'workflow_definitions_export test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_definitions_import
  # Imports a workflow definition based on the provided model
  # @param data_file A workflow definition in YAML format to import
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Workflow name to override
  # @option opts [Boolean] :validate_only When enabled, prevents saving workflow after validating
  # @return [DefinitionsDefinitionImportResponse]
  describe 'workflow_definitions_import test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_definitions_update
  # Updates a workflow definition based on the provided model
  # @param body
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :validate_only When enabled, prevents saving workflow after validating
  # @return [ApiResourceIDsResponse]
  describe 'workflow_definitions_update test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_execute
  # Executes an on-demand Workflow, the body is JSON used to trigger the execution, the response the execution ID(s)
  # @param body
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :execution_cid CID(s) to execute on. This can be a child if this is a flight control enabled definition. If unset the definition CID is used.
  # @option opts [Array<String>] :definition_id Definition ID to execute, either a name or an ID can be specified.
  # @option opts [String] :name Workflow name to execute, either a name or an ID can be specified.
  # @option opts [String] :key Key used to help deduplicate executions, if unset a new UUID is used
  # @option opts [Integer] :depth Used to record the execution depth to help limit execution loops when a workflow triggers another. The maximum depth is 4.
  # @option opts [String] :source_event_url Used to record a URL to the source that led to triggering this workflow
  # @return [ApiResourceIDsResponse]
  describe 'workflow_execute test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_execute_internal
  # Executes an on-demand Workflow - internal workflows permitted, the body is JSON used to trigger the execution, the response the execution ID(s)
  # @param body
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :execution_cid CID(s) to execute on. This can be a child if this is a flight control enabled definition. If unset the definition CID is used.
  # @option opts [Array<String>] :definition_id Definition ID to execute, either a name or an ID can be specified.
  # @option opts [String] :name Workflow name to execute, either a name or an ID can be specified.
  # @option opts [String] :key Key used to help deduplicate executions, if unset a new UUID is used
  # @option opts [Integer] :depth Used to record the execution depth to help limit execution loops when a workflow triggers another. The maximum depth is 4.
  # @option opts [Integer] :batch_size Used to set the batchSize, if unset the default batchSize is used
  # @option opts [String] :source_event_url Used to record a URL to the source that led to triggering this workflow
  # @return [ApiResourceIDsResponse]
  describe 'workflow_execute_internal test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_execution_results
  # Get execution result of a given execution
  # @param ids workflow execution id to return results for.
  # @param [Hash] opts the optional parameters
  # @return [ApiExecutionResultsResponse]
  describe 'workflow_execution_results test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_executions_action
  # Allows a user to resume/retry a failed workflow execution.
  # @param action_name Specify one of these actions:  - &#x60;resume&#x60;: resume/retry the workflow execution(s) specified in ids
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DefinitionsDefinitionEntitiesResponse]
  describe 'workflow_executions_action test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_executions_combined
  # Search workflow executions based on the provided filter
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter FQL query specifying filter parameters.
  # @option opts [String] :offset Starting pagination offset of records to return.
  # @option opts [Integer] :limit Maximum number of records to return.
  # @option opts [String] :sort Sort items by providing a comma separated list of property and direction (eg name.desc,time.asc). If direction is omitted, defaults to descending.
  # @return [ApiExecutionResultsResponse]
  describe 'workflow_executions_combined test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_get_human_input_v1
  # Gets one or more specific human inputs by their IDs.
  # @param ids IDs of human inputs to read
  # @param [Hash] opts the optional parameters
  # @return [ModelUserInputReadResponse]
  describe 'workflow_get_human_input_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_mock_execute
  # Executes a workflow definition with mocks
  # @param body
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :execution_cid CID(s) to execute on. This can be a child if this is a flight control enabled definition. If unset the definition CID is used.
  # @option opts [String] :definition_id Definition ID to execute, either a name or an ID, or the definition itself in the request body, can be specified.
  # @option opts [String] :name Workflow name to execute, either a name or an ID, or the definition itself in the request body, can be specified.
  # @option opts [String] :key Key used to help deduplicate executions, if unset a new UUID is used
  # @option opts [Integer] :depth Used to record the execution depth to help limit execution loops when a workflow triggers another. The maximum depth is 4.
  # @option opts [String] :source_event_url Used to record a URL to the source that led to triggering this workflow
  # @option opts [Boolean] :validate_only When enabled, prevents execution after validating mocks against definition
  # @return [ApiResourceIDsResponse]
  describe 'workflow_mock_execute test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_system_definitions_de_provision
  # Deprovisions a system definition that was previously provisioned on the target CID
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [ClientSystemDefinitionCreateResponse]
  describe 'workflow_system_definitions_de_provision test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_system_definitions_promote
  # Promotes a version of a system definition for a customer. The customer must already have been provisioned. This allows the caller to apply an updated template version to a specific cid and expects all parameters to be supplied. If the template supports multi-instance the customer scope definition ID must be supplied to determine which customer workflow should be updated.
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [ClientSystemDefinitionCreateResponse]
  describe 'workflow_system_definitions_promote test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_system_definitions_provision
  # Provisions a system definition onto the target CID by using the template and provided parameters
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [ClientSystemDefinitionCreateResponse]
  describe 'workflow_system_definitions_provision test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_triggers_combined
  # Search for triggers by namespaced identifier, i.e. FalconAudit, Detection, or FalconAudit/Detection/Status. Returns all triggers if no filter specified
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter FQL query specifying filter parameters.
  # @return [TriggersTriggerExternalResponse]
  describe 'workflow_triggers_combined test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for workflow_update_human_input_v1
  # Provides an input in response to a human input action. Depending on action configuration, one or more of Approve, Decline, and/or Escalate are permitted.
  # @param id ID of human input to provide an input to
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [ApiResourceIDsResponse]
  describe 'workflow_update_human_input_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
