=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

MIT License

Copyright (c) 2023 Crowdstrike

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::CustomStorage
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CustomStorage' do
  before do
    # run before each test
    @api_instance = Falcon::CustomStorage.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CustomStorage' do
    it 'should create an instance of CustomStorage' do
      expect(@api_instance).to be_instance_of(Falcon::CustomStorage)
    end
  end

  # unit tests for delete_object
  # Delete the specified object
  # @param collection_name The name of the collection
  # @param object_key The object key
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :dry_run If false, run the operation as normal.  If true, validate that the request *would* succeed, but don&#39;t execute it.
  # @return [CustomStorageResponse]
  describe 'delete_object test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_versioned_object
  # Delete the specified versioned object
  # @param collection_name The name of the collection
  # @param collection_version The version of the collection
  # @param object_key The object key
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :dry_run If false, run the operation as normal.  If true, validate that the request *would* succeed, but don&#39;t execute it.
  # @return [CustomType3191042536]
  describe 'delete_versioned_object test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_object
  # Get the bytes for the specified object
  # @param collection_name The name of the collection
  # @param object_key The object key
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_object test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_object_metadata
  # Get the metadata for the specified object
  # @param collection_name The name of the collection
  # @param object_key The object key
  # @param [Hash] opts the optional parameters
  # @return [CustomStorageResponse]
  describe 'get_object_metadata test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_versioned_object
  # Get the bytes for the specified object
  # @param collection_name The name of the collection
  # @param collection_version The version of the collection
  # @param object_key The object key
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_versioned_object test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_versioned_object_metadata
  # Get the metadata for the specified object
  # @param collection_name The name of the collection
  # @param collection_version The version of the collection
  # @param object_key The object key
  # @param [Hash] opts the optional parameters
  # @return [CustomType3191042536]
  describe 'get_versioned_object_metadata test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_objects
  # List the object keys in the specified collection in alphabetical order
  # @param collection_name The name of the collection
  # @param [Hash] opts the optional parameters
  # @option opts [String] :_end The end key to end listing to
  # @option opts [Integer] :limit The limit of results to return
  # @option opts [String] :start The start key to start listing from
  # @return [CustomStorageObjectKeys]
  describe 'list_objects test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_objects_by_version
  # List the object keys in the specified collection in alphabetical order
  # @param collection_name The name of the collection
  # @param collection_version The version of the collection
  # @param [Hash] opts the optional parameters
  # @option opts [String] :_end The end key to end listing to
  # @option opts [Integer] :limit The limit of results to return
  # @option opts [String] :start The start key to start listing from
  # @return [CustomType1255839303]
  describe 'list_objects_by_version test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for put_object
  # Put the specified new object at the given key or overwrite an existing object at the given key
  # @param collection_name The name of the collection
  # @param object_key The object key
  # @param body
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :dry_run If false, run the operation as normal.  If true, validate that the request *would* succeed, but don&#39;t execute it.
  # @option opts [String] :schema_version The version of the collection schema
  # @return [CustomStorageResponse]
  describe 'put_object test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for put_object_by_version
  # Put the specified new object at the given key or overwrite an existing object at the given key
  # @param collection_name The name of the collection
  # @param collection_version The version of the collection
  # @param object_key The object key
  # @param body
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :dry_run If false, run the operation as normal.  If true, validate that the request *would* succeed, but don&#39;t execute it.
  # @return [CustomType3191042536]
  describe 'put_object_by_version test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for search_objects
  # Search for objects that match the specified filter criteria (returns metadata, not actual objects)
  # @param collection_name The name of the collection
  # @param filter The filter to limit the returned results.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The limit of results to return
  # @option opts [Integer] :offset The offset of results to return
  # @option opts [String] :sort The sort order for the returned results.
  # @return [CustomStorageResponse]
  describe 'search_objects test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for search_objects_by_version
  # Search for objects that match the specified filter criteria (returns metadata, not actual objects)
  # @param collection_name The name of the collection
  # @param collection_version The version of the collection
  # @param filter The filter to limit the returned results.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The limit of results to return
  # @option opts [Integer] :offset The offset of results to return
  # @option opts [String] :sort The sort order for the returned results.
  # @return [CustomType3191042536]
  describe 'search_objects_by_version test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
