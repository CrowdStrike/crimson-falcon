=begin
#CrowdStrike API Specification

#Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and more information about API endpoints that don't yet support OAuth2, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation). To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`. Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.

The version of the OpenAPI document: 2022-10-19T15:57:46Z

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::D4cRegistrationApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'D4cRegistrationApi' do
  before do
    # run before each test
    @api_instance = Falcon::D4cRegistrationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of D4cRegistrationApi' do
    it 'should create an instance of D4cRegistrationApi' do
      expect(@api_instance).to be_instance_of(Falcon::D4cRegistrationApi)
    end
  end

  # unit tests for create_cspm_azure_account
  # Creates a new account in our system for a customer and generates a script for them to run in their cloud environment to grant us access.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [RegistrationAzureAccountResponseV1]
  describe 'create_cspm_azure_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_cspmgcp_account
  # Creates a new account in our system for a customer and generates a new service account for them to add access to in their GCP environment to grant us access.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [RegistrationGCPAccountResponseV1]
  describe 'create_cspmgcp_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for discover_cloud_azure_download_certificate
  # Returns JSON object(s) that contain the base64 encoded certificate for a service principal.
  # @param tenant_id Azure Tenant ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :refresh 
  # @return [RegistrationAzureDownloadCertificateResponseV1]
  describe 'discover_cloud_azure_download_certificate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cspm_azure_account
  # Return information about Azure account registration
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :ids SubscriptionIDs of accounts to select for this status operation. If this is empty then all accounts are returned.
  # @option opts [String] :scan_type Type of scan, dry or full, to perform on selected accounts
  # @return [RegistrationAzureAccountResponseV1]
  describe 'get_cspm_azure_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cspm_azure_user_scripts
  # Return a script for customer to run in their cloud environment to grant us access to their Azure environment
  # @param [Hash] opts the optional parameters
  # @return [RegistrationAzureProvisionGetUserScriptResponseV1]
  describe 'get_cspm_azure_user_scripts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cspm_azure_user_scripts_attachment
  # Return a script for customer to run in their cloud environment to grant us access to their Azure environment as a downloadable attachment
  # @param [Hash] opts the optional parameters
  # @return [RegistrationAzureProvisionGetUserScriptResponseV1]
  describe 'get_cspm_azure_user_scripts_attachment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cspmcgp_account
  # Returns information about the current status of an GCP account.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scan_type Type of scan, dry or full, to perform on selected accounts
  # @option opts [Array<String>] :ids Parent IDs of accounts
  # @return [RegistrationGCPAccountResponseV1]
  describe 'get_cspmcgp_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cspmgcp_user_scripts
  # Return a script for customer to run in their cloud environment to grant us access to their GCP environment
  # @param [Hash] opts the optional parameters
  # @return [RegistrationGCPProvisionGetUserScriptResponseV1]
  describe 'get_cspmgcp_user_scripts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cspmgcp_user_scripts_attachment
  # Return a script for customer to run in their cloud environment to grant us access to their GCP environment as a downloadable attachment
  # @param [Hash] opts the optional parameters
  # @return [RegistrationGCPProvisionGetUserScriptResponseV1]
  describe 'get_cspmgcp_user_scripts_attachment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_cspm_azure_account_client_id
  # Update an Azure service account in our system by with the user-created client_id created with the public key we&#39;ve provided
  # @param id ClientID to use for the Service Principal associated with the customer&#39;s Azure account
  # @param [Hash] opts the optional parameters
  # @return [RegistrationAzureServicePrincipalResponseV1]
  describe 'update_cspm_azure_account_client_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
