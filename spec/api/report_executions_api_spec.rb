=begin
#CrowdStrike API Specification

#Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and more information about API endpoints that don't yet support OAuth2, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation). To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`. Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.

The version of the OpenAPI document: 2022-10-19T15:57:46Z

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::ReportExecutionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ReportExecutionsApi' do
  before do
    # run before each test
    @api_instance = Falcon::ReportExecutionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ReportExecutionsApi' do
    it 'should create an instance of ReportExecutionsApi' do
      expect(@api_instance).to be_instance_of(Falcon::ReportExecutionsApi)
    end
  end

  # unit tests for report_executions_download_get
  # Get report entity download
  # @param ids The report_execution id to download
  # @param [Hash] opts the optional parameters
  # @return [Array<Integer>]
  describe 'report_executions_download_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for report_executions_get
  # Retrieve report details for the provided report IDs.
  # @param ids The report_execution id to get details about.
  # @param [Hash] opts the optional parameters
  # @return [ApiReportExecutionsResponseV1]
  describe 'report_executions_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for report_executions_query
  # Find all report execution IDs matching the query with filter
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort Possible order by fields: created_on, last_updated_on
  # @option opts [String] :filter FQL query specifying the filter parameters. Filter term criteria: type, scheduled_report_id, status. Filter range criteria: created_on, last_updated_on, expiration_on; use any common date format, such as &#39;2010-05-15T14:55:21.892315096Z&#39;.
  # @option opts [String] :q Match query criteria, which includes all the filter string fields
  # @option opts [String] :offset Starting index of overall result set from which to return ids.
  # @option opts [Integer] :limit Number of ids to return.
  # @return [MsaQueryResponse]
  describe 'report_executions_query test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for report_executions_retry
  # This endpoint will be used to retry report executions
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ApiReportExecutionsResponseV1]
  describe 'report_executions_retry test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
