=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

This is free and unencumbered software released into the public domain.

Anyone is free to copy, modify, publish, use, compile, sell, or
distribute this software, either in source code form or as a compiled
binary, for any purpose, commercial or non-commercial, and by any
means.

In jurisdictions that recognize copyright laws, the author or authors
of this software dedicate any and all copyright interest in the
software to the public domain. We make this dedication for the benefit
of the public at large and to the detriment of our heirs and
successors. We intend this dedication to be an overt act of
relinquishment in perpetuity of all present and future rights to this
software under copyright law.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

For more information, please refer to <https://unlicense.org>

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::ZeroTrustAssessmentApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ZeroTrustAssessmentApi' do
  before do
    # run before each test
    @api_instance = Falcon::ZeroTrustAssessmentApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ZeroTrustAssessmentApi' do
    it 'should create an instance of ZeroTrustAssessmentApi' do
      expect(@api_instance).to be_instance_of(Falcon::ZeroTrustAssessmentApi)
    end
  end

  # unit tests for get_assessment_v1
  # Get Zero Trust Assessment data for one or more hosts by providing agent IDs (AID) and a customer ID (CID).
  # @param ids One or more agent IDs, which you can find in the data.zta file, or the Falcon console.
  # @param [Hash] opts the optional parameters
  # @return [DomainAssessmentsResponse]
  describe 'get_assessment_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_assessments_by_score_v1
  # Get Zero Trust Assessment data for one or more hosts by providing a customer ID (CID) and a range of scores.
  # @param filter FQL query specifying the filter score.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of scores to return in this response (min: 1, max: 1000, default: 100). Use with the &#x60;after&#x60; parameter to manage pagination of results.
  # @option opts [String] :after A pagination token used with the &#x60;limit&#x60; parameter to manage pagination of results. On your first request, don&#39;t provide an &#x60;after&#x60; token. On subsequent requests, provide the &#x60;after&#x60; token from the previous response to continue from that place in the results.
  # @option opts [String] :sort Sort accounts by their properties. A single sort field is allowed. Defaults to ascending. Supported sort option include:  &lt;ul&gt;&lt;li&gt;score|desc&lt;/li&gt;&lt;li&gt;score|asc&lt;/li&gt;&lt;/ul&gt;
  # @return [DomainAssessmentsByScoreResponse]
  describe 'get_assessments_by_score_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_audit_v1
  # Get the Zero Trust Assessment audit report for one customer ID (CID).
  # @param [Hash] opts the optional parameters
  # @return [DomainAuditResponse]
  describe 'get_audit_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
