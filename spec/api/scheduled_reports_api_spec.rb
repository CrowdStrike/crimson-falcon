=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

MIT License

Copyright (c) 2023 Crowdstrike

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::ScheduledReportsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ScheduledReportsApi' do
  before do
    # run before each test
    @api_instance = Falcon::ScheduledReportsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ScheduledReportsApi' do
    it 'should create an instance of ScheduledReportsApi' do
      expect(@api_instance).to be_instance_of(Falcon::ScheduledReportsApi)
    end
  end

  # unit tests for scheduled_reports_get
  # Retrieve scheduled reports for the provided report IDs.
  # @param ids The scheduled_report id to get details about.
  # @param [Hash] opts the optional parameters
  # @return [DomainScheduledReportsResultV1]
  describe 'scheduled_reports_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for scheduled_reports_launch
  # Launch scheduled reports executions for the provided report IDs.
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DomainReportExecutionsResponseV1]
  describe 'scheduled_reports_launch test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for scheduled_reports_query
  # Find all report IDs matching the query with filter
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort Possible order by fields: created_on, last_updated_on, last_execution_on, next_execution_on
  # @option opts [String] :filter FQL query specifying the filter parameters. Filter term criteria: type, trigger_reference, recipients, user_uuid, cid, trigger_params.metadata. Filter range criteria: created_on, modified_on; use any common date format, such as &#39;2010-05-15T14:55:21.892315096Z&#39;.
  # @option opts [String] :q Match query criteria, which includes all the filter string fields
  # @option opts [String] :offset Starting index of overall result set from which to return ids.
  # @option opts [Integer] :limit Number of ids to return.
  # @return [MsaQueryResponse]
  describe 'scheduled_reports_query test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
