=begin
#CrowdStrike API Specification

#Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and more information about API endpoints that don't yet support OAuth2, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation). To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`. Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.

The version of the OpenAPI document: 2022-10-19T15:57:46Z

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::InstallationTokensApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'InstallationTokensApi' do
  before do
    # run before each test
    @api_instance = Falcon::InstallationTokensApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of InstallationTokensApi' do
    it 'should create an instance of InstallationTokensApi' do
      expect(@api_instance).to be_instance_of(Falcon::InstallationTokensApi)
    end
  end

  # unit tests for audit_events_query
  # Search for audit events by providing an FQL filter and paging details.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset The offset to start retrieving records from.
  # @option opts [Integer] :limit The maximum records to return. [1-1000]. Defaults to 50.
  # @option opts [String] :sort The property to sort by (e.g. timestamp.desc).
  # @option opts [String] :filter The filter expression that should be used to limit the results (e.g., &#x60;action:&#39;token_create&#39;&#x60;).
  # @return [MsaQueryResponse]
  describe 'audit_events_query test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for audit_events_read
  # Gets the details of one or more audit events by id.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :ids IDs of audit events to retrieve details for
  # @return [ApiAuditEventDetailsResponseV1]
  describe 'audit_events_read test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for customer_settings_read
  # Check current installation token settings.
  # @param [Hash] opts the optional parameters
  # @return [ApiCustomerSettingsResponseV1]
  describe 'customer_settings_read test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tokens_create
  # Creates a token.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ApiTokenDetailsResponseV1]
  describe 'tokens_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tokens_delete
  # Deletes a token immediately. To revoke a token, use PATCH /installation-tokens/entities/tokens/v1 instead.
  # @param ids The token ids to delete.
  # @param [Hash] opts the optional parameters
  # @return [MsaReplyMetaOnly]
  describe 'tokens_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tokens_query
  # Search for tokens by providing an FQL filter and paging details.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset The offset to start retrieving records from.
  # @option opts [Integer] :limit The maximum records to return. [1-1000]. Defaults to 50.
  # @option opts [String] :sort The property to sort by (e.g. created_timestamp.desc).
  # @option opts [String] :filter The filter expression that should be used to limit the results (e.g., &#x60;status:&#39;valid&#39;&#x60;).
  # @return [MsaQueryResponse]
  describe 'tokens_query test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tokens_read
  # Gets the details of one or more tokens by id.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :ids IDs of tokens to retrieve details for
  # @return [ApiTokenDetailsResponseV1]
  describe 'tokens_read test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tokens_update
  # Updates one or more tokens. Use this endpoint to edit labels, change expiration, revoke, or restore.
  # @param ids The token ids to update.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [MsaQueryResponse]
  describe 'tokens_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
