=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

This is free and unencumbered software released into the public domain.

Anyone is free to copy, modify, publish, use, compile, sell, or
distribute this software, either in source code form or as a compiled
binary, for any purpose, commercial or non-commercial, and by any
means.

In jurisdictions that recognize copyright laws, the author or authors
of this software dedicate any and all copyright interest in the
software to the public domain. We make this dedication for the benefit
of the public at large and to the detriment of our heirs and
successors. We intend this dedication to be an overt act of
relinquishment in perpetuity of all present and future rights to this
software under copyright law.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

For more information, please refer to <https://unlicense.org>

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::InstallationTokensApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'InstallationTokensApi' do
  before do
    # run before each test
    @api_instance = Falcon::InstallationTokensApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of InstallationTokensApi' do
    it 'should create an instance of InstallationTokensApi' do
      expect(@api_instance).to be_instance_of(Falcon::InstallationTokensApi)
    end
  end

  # unit tests for audit_events_query
  # Search for audit events by providing an FQL filter and paging details.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset The offset to start retrieving records from.
  # @option opts [Integer] :limit The maximum records to return. [1-1000]. Defaults to 50.
  # @option opts [String] :sort The property to sort by (e.g. timestamp.desc).
  # @option opts [String] :filter The filter expression that should be used to limit the results (e.g., &#x60;action:&#39;token_create&#39;&#x60;).
  # @return [MsaQueryResponse]
  describe 'audit_events_query test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for audit_events_read
  # Gets the details of one or more audit events by id.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :ids IDs of audit events to retrieve details for
  # @return [ApiAuditEventDetailsResponseV1]
  describe 'audit_events_read test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for customer_settings_read
  # Check current installation token settings.
  # @param [Hash] opts the optional parameters
  # @return [ApiCustomerSettingsResponseV1]
  describe 'customer_settings_read test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for tokens_create
  # Creates a token.
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [ApiTokenDetailsResponseV1]
  describe 'tokens_create test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for tokens_delete
  # Deletes a token immediately. To revoke a token, use PATCH /installation-tokens/entities/tokens/v1 instead.
  # @param ids The token ids to delete.
  # @param [Hash] opts the optional parameters
  # @return [MsaReplyMetaOnly]
  describe 'tokens_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for tokens_query
  # Search for tokens by providing an FQL filter and paging details.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset The offset to start retrieving records from.
  # @option opts [Integer] :limit The maximum records to return. [1-1000]. Defaults to 50.
  # @option opts [String] :sort The property to sort by (e.g. created_timestamp.desc).
  # @option opts [String] :filter The filter expression that should be used to limit the results (e.g., &#x60;status:&#39;valid&#39;&#x60;).
  # @return [MsaQueryResponse]
  describe 'tokens_query test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for tokens_read
  # Gets the details of one or more tokens by id.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :ids IDs of tokens to retrieve details for
  # @return [ApiTokenDetailsResponseV1]
  describe 'tokens_read test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for tokens_update
  # Updates one or more tokens. Use this endpoint to edit labels, change expiration, revoke, or restore.
  # @param ids The token ids to update.
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [MsaQueryResponse]
  describe 'tokens_update test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
