=begin
Crimson Falcon - Ruby Client SDK

Code auto-generated by OpenAPI Generator; DO NOT EDIT.

MIT License

Copyright (c) 2023 Crowdstrike

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=end

require 'spec_helper'
require 'json'

# Unit tests for Falcon::Recon
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'Recon' do
  before do
    # run before each test
    @api_instance = Falcon::Recon.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of Recon' do
    it 'should create an instance of Recon' do
      expect(@api_instance).to be_instance_of(Falcon::Recon)
    end
  end

  # unit tests for aggregate_notifications_exposed_data_records_v1
  # Get notification exposed data record aggregates as specified via JSON in request body. The valid aggregation fields are: [cid notification_id created_date rule.id rule.name rule.topic source_category site author file.name credential_status bot.operating_system.hardware_id bot.bot_id]
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DomainAggregatesResponse]
  describe 'aggregate_notifications_exposed_data_records_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for aggregate_notifications_v1
  # Get notification aggregates as specified via JSON in request body.
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DomainAggregatesResponse]
  describe 'aggregate_notifications_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_actions_v1
  # Create actions for a monitoring rule. Accepts a list of actions that will be attached to the monitoring rule.
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DomainActionEntitiesResponseV1]
  describe 'create_actions_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_export_jobs_v1
  # Launch asynchronous export job. Use the job ID to poll the status of the job using GET /entities/exports/v1.
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DomainLaunchExportJobResponseV1]
  describe 'create_export_jobs_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_rules_v1
  # Create monitoring rules.
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DomainRulesEntitiesResponseV1]
  describe 'create_rules_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_action_v1
  # Delete an action from a monitoring rule based on the action ID.
  # @param id ID of the action.
  # @param [Hash] opts the optional parameters
  # @return [DomainQueryResponse]
  describe 'delete_action_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_export_jobs_v1
  # Delete export jobs (and their associated file(s)) based on their IDs.
  # @param ids Export Job IDs.
  # @param [Hash] opts the optional parameters
  # @return [DomainExportJobIDResponseV1]
  describe 'delete_export_jobs_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_notifications_v1
  # Delete notifications based on IDs. Notifications cannot be recovered after they are deleted.
  # @param ids Notifications IDs.
  # @param [Hash] opts the optional parameters
  # @return [DomainNotificationIDResponse]
  describe 'delete_notifications_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_rules_v1
  # Delete monitoring rules.
  # @param ids IDs of rules.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :notifications_deletion_requested Whether we should delete the notifications generated by this rule or not
  # @return [DomainRuleQueryResponseV1]
  describe 'delete_rules_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_actions_v1
  # Get actions based on their IDs. IDs can be retrieved using the GET /queries/actions/v1 endpoint.
  # @param ids Action IDs.
  # @param [Hash] opts the optional parameters
  # @return [DomainActionEntitiesResponseV1]
  describe 'get_actions_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_export_jobs_v1
  # Get the status of export jobs based on their IDs. Export jobs can be launched by calling POST /entities/exports/v1. When a job is complete, use the job ID to download the file(s) associated with it using GET entities/export-files/v1.
  # @param ids Export Job IDs.
  # @param [Hash] opts the optional parameters
  # @return [DomainExportJobEntitiesResponseV1]
  describe 'get_export_jobs_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_file_content_for_export_jobs_v1
  # Download the file associated with a job ID.
  # @param id Export Job ID.
  # @param [Hash] opts the optional parameters
  # @return [Array<Integer>]
  describe 'get_file_content_for_export_jobs_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_notifications_detailed_translated_v1
  # Get detailed notifications based on their IDs. These include the translated raw intelligence content that generated the match or part of it.
  # Get detailed notifications based on their IDs. These include the translated raw intelligence content that generated the match or part of it. This API endpoint will return translated notification content. The only target language available is English. A single notification can be translated per request. In case the item&#39;s content is only partial, a URL is provided under the resource&#39;s &#39;details.full_content_url&#39; path, but the content available at this URL will be the original one.
  # @param ids Notification IDs.
  # @param [Hash] opts the optional parameters
  # @return [DomainNotificationDetailsResponseV1]
  describe 'get_notifications_detailed_translated_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_notifications_detailed_v1
  # Get detailed notifications based on their IDs. These include the raw intelligence content that generated the match or part of it.
  # Get detailed notifications based on their IDs. These include the raw intelligence content that generated the match or part of it. In case the content is only partial, a URL is provided under the resource&#39;s &#39;details.full_content_url&#39; path. When present, use this URL to retrieve the full raw text content of the item. Please note this URL has a limited TTL. To get a fresh valid one, perform a new call to this API endpoint.
  # @param ids Notification IDs.
  # @param [Hash] opts the optional parameters
  # @return [DomainNotificationDetailsResponseV1]
  describe 'get_notifications_detailed_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_notifications_exposed_data_records_v1
  # Get notifications exposed data records based on their IDs. IDs can be retrieved using the GET /queries/notifications-exposed-data-records/v1 endpoint. The associate notification can be fetched using the /entities/notifications/v* endpoints
  # @param ids Notification exposed records IDs.
  # @param [Hash] opts the optional parameters
  # @return [ApiNotificationExposedDataRecordEntitiesResponseV1]
  describe 'get_notifications_exposed_data_records_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_notifications_translated_v1
  # Get notifications based on their IDs. IDs can be retrieved using the GET /queries/notifications/v1 endpoint. This endpoint will return translated notification content. The only target language available is English.
  # @param ids Notification IDs.
  # @param [Hash] opts the optional parameters
  # @return [DomainNotificationEntitiesResponseV1]
  describe 'get_notifications_translated_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_notifications_v1
  # Get notifications based on their IDs. IDs can be retrieved using the GET /queries/notifications/v1 endpoint.
  # @param ids Notification IDs.
  # @param [Hash] opts the optional parameters
  # @return [DomainNotificationEntitiesResponseV1]
  describe 'get_notifications_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_rules_v1
  # Get monitoring rules based on their IDs. IDs can be retrieved using the GET /queries/rules/v1 endpoint.
  # @param ids IDs of rules.
  # @param [Hash] opts the optional parameters
  # @return [DomainRulesEntitiesResponseV1]
  describe 'get_rules_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for preview_rule_v1
  # Preview rules notification count and distribution. This will return aggregations on: channel, count, site.
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DomainAggregatesResponse]
  describe 'preview_rule_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for query_actions_v1
  # Query actions based on provided criteria. Use the IDs from this response to get the action entities on GET /entities/actions/v1.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset Starting index of overall result set from which to return IDs.
  # @option opts [Integer] :limit Number of IDs to return. Offset + limit should NOT be above 10K.
  # @option opts [String] :sort Possible order by fields: created_timestamp, updated_timestamp. Ex: &#39;updated_timestamp|desc&#39;.
  # @option opts [String] :filter FQL query to filter actions by. Possible filter properties are: [id cid user_uuid rule_id type frequency content_format trigger_matchless recipients status created_timestamp updated_timestamp]
  # @option opts [String] :q Free text search across all indexed fields
  # @return [DomainQueryResponse]
  describe 'query_actions_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for query_notifications_exposed_data_records_v1
  # Query notifications exposed data records based on provided criteria. Use the IDs from this response to get the notification +entities on GET /entities/notifications-exposed-data-records/v1
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset Starting index of overall result set from which to return ids.
  # @option opts [Integer] :limit Number of IDs to return. Offset + limit should NOT be above 10K.
  # @option opts [String] :sort Possible order by fields: created_date, updated_date. Ex: &#39;updated_date|desc&#39;.
  # @option opts [String] :filter FQL query to filter notifications by. Possible filter properties are: [id cid user_uuid created_date exposure_date rule.id rule.name rule.topic notification_id source_category site site_id author author_id user_id user_name credentials_url credentials_domain credentials_ip email domain hash_type display_name full_name user_ip phone_number company job_position file.name file.complete_data_set file.download_urls location.postal_code location.city location.state location.federal_district location.federal_admin_region location.country_code social.twitter_id social.facebook_id social.vk_id social.vk_token social.aim_id social.icq_id social.msn_id social.instagram_id social.skype_id financial.credit_card financial.bank_account financial.crypto_currency_addresses login_id credential_status _all bot.operating_system.hardware_id bot.bot_id]
  # @option opts [String] :q Free text search across all indexed fields.
  # @return [DomainQueryResponse]
  describe 'query_notifications_exposed_data_records_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for query_notifications_v1
  # Query notifications based on provided criteria. Use the IDs from this response to get the notification +entities on GET /entities/notifications/v1, GET /entities/notifications-detailed/v1, +GET /entities/notifications-translated/v1 or GET /entities/notifications-detailed-translated/v1.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset Starting index of overall result set from which to return IDs.
  # @option opts [Integer] :limit Number of IDs to return. Offset + limit should NOT be above 10K.
  # @option opts [String] :sort Possible order by fields: &#x60;created_date&#x60;, &#x60;updated_date&#x60;. Ex: &#x60;updated_date|desc&#x60;.
  # @option opts [String] :filter FQL query to filter notifications by. Possible filter properties are: [id cid user_uuid status rule_id rule_name rule_topic rule_priority item_type item_site typosquatting.id typosquatting.unicode_format typosquatting.punycode_format typosquatting.parent_domain.id typosquatting.parent_domain.unicode_format typosquatting.parent_domain.punycode_format typosquatting.base_domain.id typosquatting.base_domain.unicode_format typosquatting.base_domain.punycode_format typosquatting.base_domain.is_registered typosquatting.base_domain.whois.registrar.name typosquatting.base_domain.whois.registrar.status typosquatting.base_domain.whois.registrant.email typosquatting.base_domain.whois.registrant.name typosquatting.base_domain.whois.registrant.org typosquatting.base_domain.whois.name_servers created_date updated_date assigned_to_uuid breach_summary.credential_statuses breach_summary.is_retroactively_deduped]
  # @option opts [String] :q Free text search across all indexed fields.
  # @return [DomainQueryResponse]
  describe 'query_notifications_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for query_rules_v1
  # Query monitoring rules based on provided criteria. Use the IDs from this response to fetch the rules on /entities/rules/v1.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset Starting index of overall result set from which to return IDs.
  # @option opts [Integer] :limit Number of IDs to return. Offset + limit should NOT be above 10K.
  # @option opts [String] :sort Possible order by fields: created_timestamp, last_updated_timestamp. Ex: &#x60;last_updated_timestamp|desc&#x60;.
  # @option opts [String] :filter FQL query to filter rules by. Possible filter properties are: [id cid user_uuid topic priority permissions status filter breach_monitoring_enabled substring_matching_enabled created_timestamp last_updated_timestamp].
  # @option opts [String] :q Free text search across all indexed fields.
  # @option opts [String] :secondary_sort Possible order by fields: created_timestamp, last_updated_timestamp. Ex: &#x60;last_updated_timestamp|desc&#x60;.
  # @return [DomainRuleQueryResponseV1]
  describe 'query_rules_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_action_v1
  # Update an action for a monitoring rule.
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DomainActionEntitiesResponseV1]
  describe 'update_action_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_notifications_v1
  # Update notification status or assignee. Accepts bulk requests
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DomainNotificationEntitiesResponseV1]
  describe 'update_notifications_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_rules_v1
  # Update monitoring rules.
  # @param body
  # @param [Hash] opts the optional parameters
  # @return [DomainRulesEntitiesResponseV1]
  describe 'update_rules_v1 test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
